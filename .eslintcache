[{"C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\index.tsx":"1","C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\reportWebVitals.ts":"2","C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\store\\store.ts":"3","C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\App.tsx":"4","C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\store\\app-reducer.ts":"5","C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\store\\home-reducer.ts":"6","C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\store\\myLibrary-reducer.ts":"7","C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\store\\player-reducer.ts":"8","C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\store\\album-reducer.ts":"9","C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\store\\playlist-reducer.ts":"10","C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\pages\\login\\Login.tsx":"11","C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\pages\\main\\Main.tsx":"12","C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\api\\spotify-web-api.ts":"13","C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\api\\api.ts":"14","C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\pages\\main\\home\\Home.tsx":"15","C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\pages\\main\\playlist\\Playlist.tsx":"16","C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\pages\\main\\album\\Album.tsx":"17","C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\pages\\main\\yourLibrary\\recentlyPlayed\\RecentlyPlayed.tsx":"18","C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\pages\\main\\yourLibrary\\LikedTracks\\LikedTracks.tsx":"19","C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\components\\layout\\Layout.tsx":"20","C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\helpers\\helpers.ts":"21","C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\components\\layout\\Header.tsx":"22","C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\components\\layout\\Nav.tsx":"23","C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\components\\layout\\player\\Player.tsx":"24","C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\components\\common\\playlistCard\\PlaylistCard.tsx":"25","C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\components\\common\\tracklist\\Tracklist.tsx":"26","C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\assets\\UI\\Table\\Table.tsx":"27","C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\components\\layout\\appNav\\AppNav.tsx":"28","C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\components\\layout\\myLibraryNav\\MyLibraryNav.tsx":"29","C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\components\\layout\\player\\currentTrack\\CurrentTrack.tsx":"30","C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\store\\artist-reducer.ts":"31","C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\pages\\main\\artist\\Artist.tsx":"32","C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\components\\common\\artistsLinks\\ArtistsLinks.tsx":"33","C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\components\\artist\\PopularTracks.tsx":"34","C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\components\\common\\cards\\Cards.tsx":"35","C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\components\\common\\card\\Card.tsx":"36","C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\components\\common\\albumCard\\AlbumCard.tsx":"37","C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\components\\common\\card\\CardSkeleton.tsx":"38"},{"size":912,"mtime":1610633256770,"results":"39","hashOfConfig":"40"},{"size":425,"mtime":1607317929848,"results":"41","hashOfConfig":"40"},{"size":846,"mtime":1610615971852,"results":"42","hashOfConfig":"40"},{"size":1107,"mtime":1610529283982,"results":"43","hashOfConfig":"40"},{"size":768,"mtime":1610608960159,"results":"44","hashOfConfig":"40"},{"size":1991,"mtime":1611077859292,"results":"45","hashOfConfig":"40"},{"size":1233,"mtime":1610611781447,"results":"46","hashOfConfig":"40"},{"size":783,"mtime":1610611781454,"results":"47","hashOfConfig":"40"},{"size":705,"mtime":1610611966224,"results":"48","hashOfConfig":"40"},{"size":752,"mtime":1610611781449,"results":"49","hashOfConfig":"40"},{"size":793,"mtime":1610115202790,"results":"50","hashOfConfig":"40"},{"size":1229,"mtime":1610616396669,"results":"51","hashOfConfig":"40"},{"size":454,"mtime":1610615330765,"results":"52","hashOfConfig":"40"},{"size":1643,"mtime":1610271477229,"results":"53","hashOfConfig":"40"},{"size":1639,"mtime":1611068462264,"results":"54","hashOfConfig":"40"},{"size":963,"mtime":1610630125323,"results":"55","hashOfConfig":"40"},{"size":2989,"mtime":1610617252418,"results":"56","hashOfConfig":"40"},{"size":865,"mtime":1610541119727,"results":"57","hashOfConfig":"40"},{"size":800,"mtime":1610541033798,"results":"58","hashOfConfig":"40"},{"size":488,"mtime":1610360476342,"results":"59","hashOfConfig":"40"},{"size":233,"mtime":1610527828587,"results":"60","hashOfConfig":"40"},{"size":777,"mtime":1610207924939,"results":"61","hashOfConfig":"40"},{"size":418,"mtime":1610201734089,"results":"62","hashOfConfig":"40"},{"size":4735,"mtime":1611061055401,"results":"63","hashOfConfig":"40"},{"size":495,"mtime":1611066034093,"results":"64","hashOfConfig":"40"},{"size":3218,"mtime":1610617942561,"results":"65","hashOfConfig":"40"},{"size":1092,"mtime":1610276307669,"results":"66","hashOfConfig":"40"},{"size":1129,"mtime":1610257856100,"results":"67","hashOfConfig":"40"},{"size":987,"mtime":1610207018817,"results":"68","hashOfConfig":"40"},{"size":930,"mtime":1610622933359,"results":"69","hashOfConfig":"40"},{"size":1331,"mtime":1611051995995,"results":"70","hashOfConfig":"40"},{"size":3141,"mtime":1611066034121,"results":"71","hashOfConfig":"40"},{"size":632,"mtime":1610622933351,"results":"72","hashOfConfig":"40"},{"size":2689,"mtime":1611049387460,"results":"73","hashOfConfig":"40"},{"size":933,"mtime":1611066833484,"results":"74","hashOfConfig":"40"},{"size":770,"mtime":1611066917704,"results":"75","hashOfConfig":"40"},{"size":536,"mtime":1611062973787,"results":"76","hashOfConfig":"40"},{"size":438,"mtime":1611066696528,"results":"77","hashOfConfig":"40"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},"1vm27yo",{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"80"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"80"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"111","messages":"112","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"80"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"80"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"80"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"80"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"80"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"80"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151","usedDeprecatedRules":"80"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"156","usedDeprecatedRules":"80"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},"C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\index.tsx",[],["165","166"],"C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\reportWebVitals.ts",[],"C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\store\\store.ts",[],"C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\App.tsx",[],"C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\store\\app-reducer.ts",[],"C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\store\\home-reducer.ts",[],"C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\store\\myLibrary-reducer.ts",[],"C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\store\\player-reducer.ts",[],"C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\store\\album-reducer.ts",["167"],"import {createAsyncThunk, createSlice, PayloadAction} from \"@reduxjs/toolkit\";\r\nimport {spotifyWebApi} from \"../api/spotify-web-api\";\r\n\r\nconst initialState = {\r\n    album: null as SpotifyApi.SingleAlbumResponse | null,\r\n}\r\n\r\nexport const getAlbum = createAsyncThunk\r\n(\"getAlbum\", async ({id}: {id: string}, thunkAPI) => {\r\n    let result = await spotifyWebApi.getAlbum(id)\r\n    return result.body\r\n})\r\n\r\nexport const albumSlice = createSlice({\r\n    name: \"album\",\r\n    initialState: initialState,\r\n    reducers: {},\r\n    extraReducers: builder => (\r\n        builder\r\n            .addCase(getAlbum.fulfilled, (state, action) => {\r\n                state.album = action.payload\r\n            })\r\n    )\r\n})\r\n\r\n","C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\store\\playlist-reducer.ts",[],"C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\pages\\login\\Login.tsx",[],"C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\pages\\main\\Main.tsx",["168","169"],"import React, {useEffect} from 'react';\r\nimport {useDispatch} from \"react-redux\";\r\nimport { getMyInfo } from '../../store/home-reducer';\r\nimport Layout from \"../../components/layout/Layout\";\r\nimport {Route, Switch } from 'react-router-dom';\r\nimport RecentlyPlayed from \"./yourLibrary/recentlyPlayed/RecentlyPlayed\";\r\nimport LikedTracks from \"./yourLibrary/LikedTracks/LikedTracks\";\r\nimport Home from \"./home/Home\";\r\nimport Album from \"./album/Album\";\r\nimport Playlist from './playlist/Playlist';\r\nimport Artist from \"./artist/Artist\";\r\n\r\nconst Main:React.FC = ({}) => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n\r\n    useEffect(() => {\r\n        dispatch(getMyInfo())\r\n    },[])\r\n\r\n\r\n\r\n    return (\r\n        <Layout>\r\n            <Switch>\r\n                <Route path={\"/\"} exact component={Home}/>\r\n                <Route path={\"/album/:id\"} component={Album}/>\r\n                <Route path={\"/playlist/:id\"} component={Playlist}/>\r\n                <Route path={\"/artist/:id\"} component={Artist}/>\r\n                <Route path={\"/recently-played\"} component={RecentlyPlayed} />\r\n                <Route path={\"/liked-songs\"} component={LikedTracks} />\r\n            </Switch>\r\n        </Layout>\r\n    );\r\n};\r\n\r\nexport default Main;\r\n","C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\api\\spotify-web-api.ts",[],"C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\api\\api.ts",[],"C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\pages\\main\\home\\Home.tsx",["170"],"C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\pages\\main\\playlist\\Playlist.tsx",["171"],"import React, {useEffect} from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppRootStateType} from \"../../../store/store\";\r\nimport {getPlaylist} from \"../../../store/playlist-reducer\";\r\nimport Tracklist from \"../../../components/common/tracklist/Tracklist\";\r\n\r\nconst Playlist = () => {\r\n\r\n    let {id} = useParams<{id: string}>()\r\n\r\n    const dispatch = useDispatch()\r\n    const playlist = useSelector<AppRootStateType, SpotifyApi.SinglePlaylistResponse | null>(state => state.playlist.playlist)\r\n\r\n    console.log(\"playlist page\", playlist)\r\n\r\n    useEffect(() => {\r\n        dispatch(getPlaylist({id}))\r\n    }, [id])\r\n\r\n    return (\r\n        <div>\r\n\r\n            <div>\r\n                {playlist?.name}\r\n            </div>\r\n            {playlist && <Tracklist tracks={playlist?.tracks.items as SpotifyApi.SavedTrackObject[]}/>}\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Playlist;\r\n","C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\pages\\main\\album\\Album.tsx",["172","173"],"import React, {useEffect, useMemo} from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {getAlbum} from \"../../../store/album-reducer\";\r\nimport {AppRootStateType} from \"../../../store/store\";\r\nimport Table, {ITableModel} from \"../../../assets/UI/Table/Table\";\r\nimport {convertToMMSS} from \"../../../helpers/helpers\";\r\nimport {getTrack} from \"../../../store/player-reducer\";\r\n\r\nconst Album = () => {\r\n\r\n    let {id} = useParams<{id: string}>()\r\n\r\n    const dispatch = useDispatch()\r\n    const album = useSelector<AppRootStateType, SpotifyApi.SingleAlbumResponse | null>(state => state.album.album)\r\n\r\n    console.log(\"album page\",album)\r\n\r\n    useEffect(() => {\r\n        dispatch(getAlbum({id}))\r\n    }, [id])\r\n\r\n    const playTrack = (trackId: string) => {\r\n        dispatch(getTrack({trackId}))\r\n    }\r\n\r\n    const testModel: ITableModel[] = useMemo(() => ([\r\n        {\r\n            title: (i: number) => (\r\n                <th style={{width: \"10%\", paddingLeft: \"20px\"}} key={i}>\r\n                    <span>preview</span>\r\n                </th>),\r\n            render: (d: SpotifyApi.TrackObjectSimplified, i: number) => (\r\n                <td style={{width: \"10%\", paddingLeft: \"20px\"}} key={i}>\r\n                    <button onClick={() => playTrack(d.id)}>Play</button>\r\n                </td>)\r\n        },\r\n        {\r\n            title: (i: number) => (\r\n                <th style={{width: \"30%\", paddingLeft: \"20px\"}} key={i}>\r\n                    <span>Name</span>\r\n                </th>),\r\n            render: (d: SpotifyApi.TrackObjectSimplified, i: number) => (\r\n                <td style={{width: \"30%\", paddingLeft: \"20px\"}} key={i}>\r\n                    <div style={{whiteSpace: \"pre-wrap\"}}>{d.name}</div>\r\n                </td>)\r\n        },\r\n        {\r\n            title: (i: number) => (\r\n                <th style={{width: \"30%\", paddingLeft: \"20px\"}} key={i}>\r\n                    <span>Artist</span>\r\n                </th>),\r\n            render: (d: SpotifyApi.TrackObjectSimplified, i: number) => (\r\n                <td style={{width: \"30%\", paddingLeft: \"20px\"}} key={i}>\r\n                    <div style={{whiteSpace: \"pre-wrap\"}}>{d.artists.map(artist => artist.name).join(\", \")}</div>\r\n                </td>)\r\n        },\r\n        {\r\n            title: (i: number) => (\r\n                <th style={{width: \"10%\", paddingRight: \"20px\"}} key={i}>\r\n                    <span>Duration</span>\r\n                </th>),\r\n            render: (d: SpotifyApi.TrackObjectSimplified, i: number) => (\r\n                <td style={{width: \"30%\", paddingRight: \"20px\"}} key={i}>\r\n                    <div style={{whiteSpace: \"pre-wrap\"}}>{convertToMMSS(d.duration_ms / 1000)}</div>\r\n                </td>)\r\n        },\r\n\r\n    ]), [])\r\n\r\n    return (\r\n        <div>\r\n            {album && <Table model={testModel} data={album.tracks.items} disabled={false}/>}\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Album;\r\n","C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\pages\\main\\yourLibrary\\recentlyPlayed\\RecentlyPlayed.tsx",["174"],"import React, {useEffect} from 'react';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppRootStateType} from \"../../../../store/store\";\r\nimport Tracklist from \"../../../../components/common/tracklist/Tracklist\";\r\nimport { getMyRecentlyPlayedTracks } from '../../../../store/myLibrary-reducer';\r\nimport classes from \"./RecentlyPlayed.module.scss\";\r\n\r\n\r\nconst RecentlyPlayed = () => {\r\n\r\n    const dispatch = useDispatch()\r\n    const myRecentlyPlayedTracks = useSelector<AppRootStateType, Array<SpotifyApi.PlayHistoryObject>>(state => state.myLibrary.myRecentlyPlayedTracks)\r\n\r\n\r\n    useEffect(() => {\r\n        dispatch(getMyRecentlyPlayedTracks())\r\n    }, [])\r\n\r\n    return (\r\n        <div className={classes.recentlyPlayed}>\r\n            <Tracklist tracks={myRecentlyPlayedTracks} />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default RecentlyPlayed;\r\n","C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\pages\\main\\yourLibrary\\LikedTracks\\LikedTracks.tsx",["175"],"import React, {useEffect} from 'react';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppRootStateType} from \"../../../../store/store\";\r\nimport Tracklist from \"../../../../components/common/tracklist/Tracklist\";\r\nimport {getMySavedTracks} from '../../../../store/myLibrary-reducer';\r\nimport classes from './LikedTracks.module.scss';\r\n\r\nconst LikedTracks = () => {\r\n\r\n    const dispatch = useDispatch()\r\n    const mySavedTracks = useSelector<AppRootStateType, Array<SpotifyApi.SavedTrackObject>>(state => state.myLibrary.mySavedTracks)\r\n\r\n    useEffect(() => {\r\n        dispatch(getMySavedTracks())\r\n    }, [])\r\n\r\n    return (\r\n        <div className={classes.likedTracks}>\r\n            <Tracklist tracks={mySavedTracks}/>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default LikedTracks;\r\n","C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\components\\layout\\Layout.tsx",[],"C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\helpers\\helpers.ts",[],"C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\components\\layout\\Header.tsx",[],"C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\components\\layout\\Nav.tsx",[],"C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\components\\layout\\player\\Player.tsx",[],"C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\components\\common\\playlistCard\\PlaylistCard.tsx",[],"C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\components\\common\\tracklist\\Tracklist.tsx",["176"],"import React, {useMemo} from 'react';\r\nimport Table, {ITableModel} from \"../../../assets/UI/Table/Table\";\r\nimport {convertToMMSS} from \"../../../helpers/helpers\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {getTrack} from \"../../../store/player-reducer\";\r\nimport ArtistsLinks from \"../artistsLinks/ArtistsLinks\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\ntype PropsType = {\r\n    tracks: Array<SpotifyApi.SavedTrackObject | SpotifyApi.PlayHistoryObject>\r\n}\r\n\r\nconst Tracklist: React.FC<PropsType> = ({tracks}) => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const playTrack = (trackId: string) => {\r\n        dispatch(getTrack({trackId}))\r\n    }\r\n    console.log(\"tracklist\", tracks)\r\n\r\n    const testModel: ITableModel[] = useMemo(() => ([\r\n        {\r\n            title: (i: number) => (\r\n                <th style={{width: \"10%\", paddingLeft: \"20px\"}} key={i}>\r\n                    <span>preview</span>\r\n                </th>),\r\n            render: (d: SpotifyApi.SavedTrackObject, i: number) => (\r\n                <td style={{width: \"10%\", paddingLeft: \"20px\"}} key={i}>\r\n                    <button onClick={() => playTrack(d.track.id)}>Play</button>\r\n                </td>)\r\n        },\r\n        {\r\n            title: (i: number) => (\r\n                <th style={{width: \"30%\", paddingLeft: \"20px\"}} key={i}>\r\n                    <span>Name</span>\r\n                </th>),\r\n            render: (d: SpotifyApi.SavedTrackObject, i: number) => (\r\n                <td style={{width: \"30%\", paddingLeft: \"20px\"}} key={i}>\r\n                    <div style={{whiteSpace: \"pre-wrap\"}}>{d.track.name}</div>\r\n                </td>)\r\n        },\r\n        {\r\n            title: (i: number) => (\r\n                <th style={{width: \"30%\", paddingLeft: \"20px\"}} key={i}>\r\n                    <span>Artist</span>\r\n                </th>),\r\n            render: (d: SpotifyApi.SavedTrackObject, i: number) => (\r\n                <td style={{width: \"30%\", paddingLeft: \"20px\"}} key={i}>\r\n                    <ArtistsLinks artists={d.track.artists}/>\r\n                </td>)\r\n        },\r\n        {\r\n            title: (i: number) => (\r\n                <th style={{width: \"30%\", paddingLeft: \"20px\"}} key={i}>\r\n                    <span>Album</span>\r\n                </th>),\r\n            render: (d: SpotifyApi.SavedTrackObject, i: number) => (\r\n                <td style={{width: \"30%\", paddingLeft: \"20px\"}} key={i}>\r\n                    <Link to={{pathname: `/album/${d.track.album.id}`}} style={{whiteSpace: \"pre-wrap\", color: \"inherit\"}}>{d.track.album.name}</Link>\r\n                </td>)\r\n        },\r\n        {\r\n            title: (i: number) => (\r\n                <th style={{width: \"10%\", paddingRight: \"20px\"}} key={i}>\r\n                    <span>Duration</span>\r\n                </th>),\r\n            render: (d: SpotifyApi.SavedTrackObject, i: number) => (\r\n                <td style={{width: \"30%\", paddingRight: \"20px\"}} key={i}>\r\n                    <div style={{whiteSpace: \"pre-wrap\"}}>{convertToMMSS(d.track.duration_ms / 1000)}</div>\r\n                </td>)\r\n        },\r\n\r\n    ]), [])\r\n\r\n\r\n    return (\r\n        <Table model={testModel} data={tracks} disabled={false}/>\r\n    );\r\n};\r\n\r\nexport default Tracklist;\r\n","C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\assets\\UI\\Table\\Table.tsx",[],"C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\components\\layout\\appNav\\AppNav.tsx",[],"C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\components\\layout\\myLibraryNav\\MyLibraryNav.tsx",[],"C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\components\\layout\\player\\currentTrack\\CurrentTrack.tsx",[],"C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\store\\artist-reducer.ts",["177"],"import {createAsyncThunk, createSlice, PayloadAction} from \"@reduxjs/toolkit\";\r\nimport {spotifyWebApi} from \"../api/spotify-web-api\";\r\n\r\nconst initialState = {\r\n    artist: null as SpotifyApi.SingleArtistResponse | null,\r\n    popularTracks: [] as SpotifyApi.TrackObjectFull[],\r\n    albums: [] as  SpotifyApi.AlbumObjectSimplified[],\r\n    relatedArtists: [] as  SpotifyApi.ArtistObjectFull[]\r\n}\r\n\r\nexport const getArtist = createAsyncThunk\r\n(\"getArtist\", async ({id}: {id: string}, thunkAPI) => {\r\n    let [artist, popular, albums, relatedArtists] = await Promise\r\n        .all([\r\n            spotifyWebApi.getArtist(id),\r\n            spotifyWebApi.getArtistTopTracks(id, \"RU\"),\r\n            spotifyWebApi.getArtistAlbums(id),\r\n            spotifyWebApi.getArtistRelatedArtists(id)\r\n        ])\r\n    console.log(artist, popular)\r\n    return {\r\n        artist: artist.body,\r\n        popularTracks: popular.body.tracks,\r\n        albums: albums.body.items,\r\n        relatedArtists: relatedArtists.body.artists\r\n    }\r\n})\r\n\r\nexport const artistSlice = createSlice({\r\n    name: \"artist\",\r\n    initialState: initialState,\r\n    reducers: {},\r\n    extraReducers: builder => (\r\n        builder\r\n            .addCase(getArtist.fulfilled, (state, action) => {\r\n                Object.assign(state, action.payload)\r\n            })\r\n    )\r\n})\r\n\r\n","C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\pages\\main\\artist\\Artist.tsx",["178"],"import React, {useEffect, useState} from 'react';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppRootStateType} from \"../../../store/store\";\r\nimport {getArtist} from \"../../../store/artist-reducer\";\r\nimport {useParams} from \"react-router-dom\";\r\nimport classes from './Artist.module.scss';\r\nimport Skeleton from \"react-loading-skeleton\";\r\nimport PopularTracks from \"../../../components/artist/PopularTracks\";\r\nimport Cards from \"../../../components/common/cards/Cards\";\r\n\r\nconst Artist = () => {\r\n\r\n    const dispatch = useDispatch()\r\n    let {id} = useParams<{id: string}>()\r\n    const [isLoaded, setIsLoaded] = useState(false)\r\n\r\n    const artist = useSelector<AppRootStateType, SpotifyApi.SingleArtistResponse | null>(state => state.artist.artist)\r\n    const popularTracks = useSelector<AppRootStateType, SpotifyApi.TrackObjectFull[]>(state => state.artist.popularTracks)\r\n    const albums = useSelector<AppRootStateType,  SpotifyApi.AlbumObjectSimplified[]>(state => state.artist.albums)\r\n    const relatedArtists = useSelector<AppRootStateType, SpotifyApi.ArtistObjectFull[]>(state => state.artist.relatedArtists)\r\n\r\n    console.log(\"artist\", artist)\r\n    console.log(\"artist popular tracks \", popularTracks)\r\n    console.log(\"artist albums \", albums)\r\n    console.log(\"artist related artists \", relatedArtists)\r\n\r\n    useEffect(() => {\r\n        dispatch(getArtist({id}))\r\n    }, [id])\r\n\r\n    return (\r\n        <div className={classes.artist}>\r\n            <header className={classes.banner}>\r\n                <div className={classes.profile}>\r\n                    <div className={classes.profileRow}>\r\n                        <img className={classes.mainImage}\r\n                             src={artist?.images[1].url}\r\n                             style={{display: isLoaded ? \"block\" : \"none\"}}\r\n                             onLoad={() => setIsLoaded(true)}\r\n                             alt=\"\"/>\r\n                        {!isLoaded && <Skeleton\r\n                            circle={true}\r\n                            width={\"13.2rem\"}\r\n                            height={\"13.2rem\"}/>}\r\n                        <div className={classes.info}>\r\n                            <p className={classes.title}>Artist</p>\r\n                            <p className={classes.name}>{artist?.name}</p>\r\n                            <div className={classes.buttons}>\r\n                                <button>Play</button>\r\n                                <button>following</button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className={classes.followers}>\r\n                        <span className={classes.text}>Followers</span>\r\n                        <span className={classes.text}>{artist?.followers.total}</span>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className={classes.nav}></div>\r\n            </header>\r\n            <PopularTracks tracks={popularTracks} />\r\n            <div>\r\n                <Cards cards={albums} type={\"album\"}/>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Artist;\r\n","C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\components\\common\\artistsLinks\\ArtistsLinks.tsx",[],"C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\components\\artist\\PopularTracks.tsx",["179","180"],"import React, {useCallback, useMemo, useState} from 'react';\r\nimport Table, {ITableModel} from \"../../assets/UI/Table/Table\";\r\nimport {convertToMMSS} from \"../../helpers/helpers\";\r\nimport {getTrack} from \"../../store/player-reducer\";\r\nimport {useDispatch} from \"react-redux\";\r\n\r\ntype PropsType = {\r\n    tracks: SpotifyApi.TrackObjectFull[]\r\n}\r\n\r\n\r\nconst PopularTracks: React.FC<PropsType> = ({tracks}) => {\r\n\r\n    const [toggle, setToggle] = useState(false)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const playTrack = useCallback((trackId: string) => {\r\n        dispatch(getTrack({trackId}))\r\n    }, [])\r\n\r\n    const testModel: ITableModel[] = useMemo(() => ([\r\n        {\r\n            title: (i: number) => (\r\n                <th style={{width: \"10%\", paddingLeft: \"20px\"}} key={i}>\r\n                    <span>preview</span>\r\n                </th>),\r\n            render: (d: SpotifyApi.TrackObjectFull, i: number) => (\r\n                <td style={{width: \"10%\", paddingLeft: \"20px\"}} key={i}>\r\n                    <button onClick={() => playTrack(d.id)}>Play</button>\r\n                </td>)\r\n        },\r\n        {\r\n            title: (i: number) => (<th key={i}></th>),\r\n            render: (d: SpotifyApi.TrackObjectFull, i: number, dataIndex: number) => (\r\n                <td style={{width: \"5%\"}} key={i}>\r\n                    <div style={{whiteSpace: \"pre-wrap\"}}>{dataIndex+1}</div>\r\n                </td>)\r\n        },\r\n        {\r\n            title: (i: number) => (\r\n                <th style={{width: \"60%\", paddingLeft: \"20px\"}} key={i}>\r\n                    <span>Name</span>\r\n                </th>),\r\n            render: (d: SpotifyApi.TrackObjectFull, i: number) => (\r\n                <td style={{width: \"60%\", paddingLeft: \"20px\"}} key={i}>\r\n                    <div style={{whiteSpace: \"pre-wrap\"}}>{d.name}</div>\r\n                </td>)\r\n        },\r\n        {\r\n            title: (i: number) => (\r\n                <th style={{width: \"10%\", paddingRight: \"20px\"}} key={i}>\r\n                    <span>Duration</span>\r\n                </th>),\r\n            render: (d: SpotifyApi.TrackObjectFull, i: number) => (\r\n                <td style={{width: \"30%\", paddingRight: \"20px\"}} key={i}>\r\n                    <div style={{whiteSpace: \"pre-wrap\"}}>{convertToMMSS(d.duration_ms / 1000)}</div>\r\n                </td>)\r\n        },\r\n\r\n    ]), [])\r\n\r\n    return (\r\n        <div>\r\n            <h3>Popular</h3>\r\n            <Table model={testModel} data={toggle ? tracks : tracks?.slice(0, 5)} disabled={false} />\r\n            <button onClick={() => setToggle(!toggle)}>{toggle ? `Show 5 less` : `Show 5 more`}</button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default PopularTracks;\r\n","C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\components\\common\\cards\\Cards.tsx",[],"C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\components\\common\\card\\Card.tsx",[],"C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\components\\common\\albumCard\\AlbumCard.tsx",[],"C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\components\\common\\card\\CardSkeleton.tsx",[],{"ruleId":"181","replacedBy":"182"},{"ruleId":"183","replacedBy":"184"},{"ruleId":"185","severity":1,"message":"186","line":1,"column":40,"nodeType":"187","messageId":"188","endLine":1,"endColumn":53},{"ruleId":"189","severity":1,"message":"190","line":13,"column":24,"nodeType":"191","messageId":"192","endLine":13,"endColumn":26},{"ruleId":"193","severity":1,"message":"194","line":20,"column":7,"nodeType":"195","endLine":20,"endColumn":9,"suggestions":"196"},{"ruleId":"193","severity":1,"message":"197","line":20,"column":8,"nodeType":"195","endLine":20,"endColumn":10,"suggestions":"198"},{"ruleId":"193","severity":1,"message":"194","line":19,"column":8,"nodeType":"195","endLine":19,"endColumn":12,"suggestions":"199"},{"ruleId":"193","severity":1,"message":"194","line":21,"column":8,"nodeType":"195","endLine":21,"endColumn":12,"suggestions":"200"},{"ruleId":"193","severity":1,"message":"201","line":69,"column":9,"nodeType":"195","endLine":69,"endColumn":11,"suggestions":"202"},{"ruleId":"193","severity":1,"message":"194","line":17,"column":8,"nodeType":"195","endLine":17,"endColumn":10,"suggestions":"203"},{"ruleId":"193","severity":1,"message":"194","line":15,"column":8,"nodeType":"195","endLine":15,"endColumn":10,"suggestions":"204"},{"ruleId":"193","severity":1,"message":"201","line":74,"column":9,"nodeType":"195","endLine":74,"endColumn":11,"suggestions":"205"},{"ruleId":"185","severity":1,"message":"186","line":1,"column":40,"nodeType":"187","messageId":"188","endLine":1,"endColumn":53},{"ruleId":"193","severity":1,"message":"194","line":29,"column":8,"nodeType":"195","endLine":29,"endColumn":12,"suggestions":"206"},{"ruleId":"193","severity":1,"message":"207","line":20,"column":8,"nodeType":"195","endLine":20,"endColumn":10,"suggestions":"208"},{"ruleId":"193","severity":1,"message":"201","line":61,"column":9,"nodeType":"195","endLine":61,"endColumn":11,"suggestions":"209"},"no-native-reassign",["210"],"no-negated-in-lhs",["211"],"@typescript-eslint/no-unused-vars","'PayloadAction' is defined but never used.","Identifier","unusedVar","no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["212"],"React Hook useEffect has missing dependencies: 'dispatch', 'featuredPlaylists.length', and 'newReleases.length'. Either include them or remove the dependency array.",["213"],["214"],["215"],"React Hook useMemo has a missing dependency: 'playTrack'. Either include it or remove the dependency array.",["216"],["217"],["218"],["219"],["220"],"React Hook useCallback has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["221"],["222"],"no-global-assign","no-unsafe-negation",{"desc":"223","fix":"224"},{"desc":"225","fix":"226"},{"desc":"227","fix":"228"},{"desc":"227","fix":"229"},{"desc":"230","fix":"231"},{"desc":"223","fix":"232"},{"desc":"223","fix":"233"},{"desc":"230","fix":"234"},{"desc":"227","fix":"235"},{"desc":"223","fix":"236"},{"desc":"230","fix":"237"},"Update the dependencies array to be: [dispatch]",{"range":"238","text":"239"},"Update the dependencies array to be: [dispatch, featuredPlaylists.length, newReleases.length]",{"range":"240","text":"241"},"Update the dependencies array to be: [dispatch, id]",{"range":"242","text":"243"},{"range":"244","text":"243"},"Update the dependencies array to be: [playTrack]",{"range":"245","text":"246"},{"range":"247","text":"239"},{"range":"248","text":"239"},{"range":"249","text":"246"},{"range":"250","text":"243"},{"range":"251","text":"239"},{"range":"252","text":"246"},[673,675],"[dispatch]",[961,963],"[dispatch, featuredPlaylists.length, newReleases.length]",[687,691],"[dispatch, id]",[774,778],[2804,2806],"[playTrack]",[673,675],[624,626],[3087,3089],[1404,1408],[610,612],[2360,2362]]