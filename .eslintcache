[{"C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\index.tsx":"1","C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\reportWebVitals.ts":"2","C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\store\\store.ts":"3","C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\App.tsx":"4","C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\store\\app-reducer.ts":"5","C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\store\\home-reducer.ts":"6","C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\store\\myLibrary-reducer.ts":"7","C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\store\\player-reducer.ts":"8","C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\pages\\login\\Login.tsx":"9","C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\pages\\main\\Main.tsx":"10","C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\api\\spotify-web-api.ts":"11","C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\api\\api.ts":"12","C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\pages\\main\\home\\Home.tsx":"13","C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\pages\\main\\playlist\\Playlist.tsx":"14","C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\pages\\main\\album\\Album.tsx":"15","C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\pages\\main\\yourLibrary\\recentlyPlayed\\RecentlyPlayed.tsx":"16","C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\components\\layout\\Layout.tsx":"17","C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\helpers\\helpers.ts":"18","C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\components\\layout\\Header.tsx":"19","C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\components\\layout\\Nav.tsx":"20","C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\components\\layout\\player\\Player.tsx":"21","C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\components\\common\\tracklist\\Tracklist.tsx":"22","C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\components\\layout\\appNav\\AppNav.tsx":"23","C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\components\\layout\\myLibraryNav\\MyLibraryNav.tsx":"24","C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\components\\layout\\player\\currentTrack\\CurrentTrack.tsx":"25","C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\store\\artist-reducer.ts":"26","C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\pages\\main\\artist\\Artist.tsx":"27","C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\components\\common\\artistsLinks\\ArtistsLinks.tsx":"28","C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\components\\common\\card\\Card.tsx":"29","C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\components\\common\\card\\CardSkeleton.tsx":"30","C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\pages\\main\\artist\\ArtistContainer.tsx":"31","C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\pages\\main\\album\\AlbumContainer.tsx":"32","C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\pages\\main\\playlist\\PlaylistContainer.tsx":"33","C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\pages\\main\\home\\HomeContainer.tsx":"34","C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\components\\common\\Table\\Table.tsx":"35","C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\components\\common\\button\\Button.tsx":"36","C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\components\\artist\\popularTracks\\PopularTracks.tsx":"37","C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\components\\common\\image\\Image.tsx":"38","C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\pages\\main\\yourLibrary\\myTopArtists\\myTopArtists.tsx":"39","C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\pages\\main\\yourLibrary\\myTopArtists\\MyTopArtists.tsx":"40","C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\pages\\main\\yourLibrary\\LikedTracks\\LikedTracks.tsx":"41","C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\components\\common\\likeButton\\LikeButton.tsx":"42","C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\components\\common\\tracklist\\TracklistHeader.tsx":"43","C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\components\\common\\card\\ArtistCard.tsx":"44","C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\components\\common\\cards\\PlaylistCards.tsx":"45","C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\components\\common\\cards\\AlbumCards.tsx":"46","C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\components\\common\\card\\PlaylistCard.tsx":"47","C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\components\\common\\cards\\CardsWrapper.tsx":"48","C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\components\\common\\card\\AlbumCard.tsx":"49","C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\components\\common\\PlayCurrentButton\\PlayCurrentButton.tsx":"50","C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\components\\layout\\player\\TrackProgress.tsx":"51","C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\components\\layout\\player\\ControlButtons.tsx":"52","C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\components\\layout\\player\\ExtendedControls.tsx":"53","C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\store\\tracklists-reducer.ts":"54"},{"size":912,"mtime":1610633256770,"results":"55","hashOfConfig":"56"},{"size":425,"mtime":1607317929848,"results":"57","hashOfConfig":"56"},{"size":777,"mtime":1612260982205,"results":"58","hashOfConfig":"56"},{"size":1107,"mtime":1610529283982,"results":"59","hashOfConfig":"56"},{"size":768,"mtime":1610608960159,"results":"60","hashOfConfig":"56"},{"size":1991,"mtime":1611077859292,"results":"61","hashOfConfig":"56"},{"size":777,"mtime":1612260485490,"results":"62","hashOfConfig":"56"},{"size":1015,"mtime":1612002983526,"results":"63","hashOfConfig":"56"},{"size":793,"mtime":1610115202790,"results":"64","hashOfConfig":"56"},{"size":1684,"mtime":1612077810496,"results":"65","hashOfConfig":"56"},{"size":454,"mtime":1610615330765,"results":"66","hashOfConfig":"56"},{"size":1643,"mtime":1610271477229,"results":"67","hashOfConfig":"56"},{"size":1126,"mtime":1612101266618,"results":"68","hashOfConfig":"56"},{"size":1327,"mtime":1612170357868,"results":"69","hashOfConfig":"56"},{"size":3667,"mtime":1612254833470,"results":"70","hashOfConfig":"56"},{"size":1771,"mtime":1612266758668,"results":"71","hashOfConfig":"56"},{"size":488,"mtime":1610360476342,"results":"72","hashOfConfig":"56"},{"size":992,"mtime":1612162321736,"results":"73","hashOfConfig":"56"},{"size":789,"mtime":1612163200372,"results":"74","hashOfConfig":"56"},{"size":430,"mtime":1612163290361,"results":"75","hashOfConfig":"56"},{"size":3742,"mtime":1612192937046,"results":"76","hashOfConfig":"56"},{"size":3853,"mtime":1612198598860,"results":"77","hashOfConfig":"56"},{"size":1129,"mtime":1610257856100,"results":"78","hashOfConfig":"56"},{"size":987,"mtime":1610207018817,"results":"79","hashOfConfig":"56"},{"size":942,"mtime":1612025198293,"results":"80","hashOfConfig":"56"},{"size":1494,"mtime":1612266081848,"results":"81","hashOfConfig":"56"},{"size":1815,"mtime":1612173205483,"results":"82","hashOfConfig":"56"},{"size":708,"mtime":1612172502123,"results":"83","hashOfConfig":"56"},{"size":831,"mtime":1612099021331,"results":"84","hashOfConfig":"56"},{"size":438,"mtime":1611066696528,"results":"85","hashOfConfig":"56"},{"size":1816,"mtime":1612262581591,"results":"86","hashOfConfig":"56"},{"size":2067,"mtime":1612260803458,"results":"87","hashOfConfig":"56"},{"size":1572,"mtime":1612260092070,"results":"88","hashOfConfig":"56"},{"size":1140,"mtime":1612078095049,"results":"89","hashOfConfig":"56"},{"size":1176,"mtime":1612068859042,"results":"90","hashOfConfig":"56"},{"size":495,"mtime":1611657297282,"results":"91","hashOfConfig":"56"},{"size":3046,"mtime":1612173843787,"results":"92","hashOfConfig":"56"},{"size":547,"mtime":1611830872729,"results":"93","hashOfConfig":"56"},{"size":911,"mtime":1611825628921,"results":"94","hashOfConfig":"56"},{"size":1190,"mtime":1612101266626,"results":"95","hashOfConfig":"56"},{"size":1881,"mtime":1612260419116,"results":"96","hashOfConfig":"56"},{"size":2833,"mtime":1612024112833,"results":"97","hashOfConfig":"56"},{"size":1700,"mtime":1612162321711,"results":"98","hashOfConfig":"56"},{"size":763,"mtime":1612070708096,"results":"99","hashOfConfig":"56"},{"size":783,"mtime":1612254852625,"results":"100","hashOfConfig":"56"},{"size":733,"mtime":1612254820669,"results":"101","hashOfConfig":"56"},{"size":526,"mtime":1612101266644,"results":"102","hashOfConfig":"56"},{"size":522,"mtime":1612101266670,"results":"103","hashOfConfig":"56"},{"size":643,"mtime":1612101266593,"results":"104","hashOfConfig":"56"},{"size":940,"mtime":1612197968726,"results":"105","hashOfConfig":"56"},{"size":1058,"mtime":1612191777335,"results":"106","hashOfConfig":"56"},{"size":3509,"mtime":1612194867557,"results":"107","hashOfConfig":"56"},{"size":776,"mtime":1612192937057,"results":"108","hashOfConfig":"56"},{"size":5613,"mtime":1612266006483,"results":"109","hashOfConfig":"56"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},"1vm27yo",{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"112"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"164","usedDeprecatedRules":"112"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"167","usedDeprecatedRules":"112"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"176","usedDeprecatedRules":"112"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"191","usedDeprecatedRules":"112"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"194","usedDeprecatedRules":"195"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"200","usedDeprecatedRules":"112"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"223","usedDeprecatedRules":"112"},{"filePath":"224","messages":"225","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"226","messages":"227","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},"C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\index.tsx",[],["228","229"],"C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\reportWebVitals.ts",[],"C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\store\\store.ts",[],"C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\App.tsx",[],"C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\store\\app-reducer.ts",[],"C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\store\\home-reducer.ts",[],"C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\store\\myLibrary-reducer.ts",[],"C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\store\\player-reducer.ts",[],"C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\pages\\login\\Login.tsx",[],"C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\pages\\main\\Main.tsx",[],"C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\api\\spotify-web-api.ts",[],"C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\api\\api.ts",[],"C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\pages\\main\\home\\Home.tsx",[],"C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\pages\\main\\playlist\\Playlist.tsx",[],"C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\pages\\main\\album\\Album.tsx",["230"],"import React, {useMemo} from 'react';\r\nimport Table, {ITableModel} from \"../../../components/common/Table/Table\";\r\nimport {convertToMMSS} from \"../../../helpers/helpers\";\r\nimport ArtistsLinks from \"../../../components/common/artistsLinks/ArtistsLinks\";\r\nimport TracklistHeader from \"../../../components/common/tracklist/TracklistHeader\";\r\nimport LikeButton from \"../../../components/common/likeButton/LikeButton\";\r\nimport PlayCurrentButton from \"../../../components/common/PlayCurrentButton/PlayCurrentButton\";\r\n\r\n\r\ntype PropsType = {\r\n    playTrack: (trackId: string) => void\r\n    album: SpotifyApi.SingleAlbumResponse\r\n    containsMySavedTracks: boolean[]\r\n    toggleFromYourSavedTracks: (trackId: string, value: boolean, index: number) => void\r\n    setPlayerQueueHandler: () => void\r\n}\r\n\r\n\r\nconst Album: React.FC<PropsType> = ({playTrack, album, containsMySavedTracks, setPlayerQueueHandler,  toggleFromYourSavedTracks}) => {\r\n\r\n    const testModel: ITableModel[] = useMemo(() => ([\r\n        {\r\n            title: (i) => (\r\n                <th key={i}/>),\r\n            render: (d: SpotifyApi.TrackObjectSimplified, i) => (\r\n                <td style={{padding: \"0 20px\"}} key={i}>\r\n                    <PlayCurrentButton onClick={playTrack}\r\n                                       image={album.images[2].url}\r\n                                       trackId={d.id}/>\r\n                </td>)\r\n        },\r\n        {\r\n            title: (i) => (\r\n                <th key={i}/>),\r\n            render: (d: SpotifyApi.TrackObjectSimplified, i, dataIndex, isSaved) => (\r\n                <td style={{padding: \"0 20px 0 0\"}} key={i}>\r\n                    <LikeButton value={isSaved}\r\n                                trackId={d.id}\r\n                                dataIndex={dataIndex}\r\n                                onChange={toggleFromYourSavedTracks}/>\r\n                </td>)\r\n        },\r\n        {\r\n            title: (i: number) => (\r\n                <th style={{width: \"50%\"}} key={i}>\r\n                    <span>Name</span>\r\n                </th>),\r\n            render: (d: SpotifyApi.TrackObjectSimplified, i) => (\r\n                <td style={{width: \"50%\"}} key={i}>\r\n                    <div style={{whiteSpace: \"pre-wrap\"}}>{d.name}</div>\r\n                </td>)\r\n        },\r\n        {\r\n            title: (i: number) => (\r\n                <th style={{width: \"40%\"}} key={i}>\r\n                    <span>Artist</span>\r\n                </th>),\r\n            render: (d: SpotifyApi.TrackObjectSimplified, i) => (\r\n                <td style={{width: \"40%\"}} key={i}>\r\n                    <ArtistsLinks artists={d.artists} />\r\n                </td>)\r\n        },\r\n        {\r\n            title: (i: number) => (\r\n                <th style={{width: \"10%\"}} key={i}>\r\n                    <span>Duration</span>\r\n                </th>),\r\n            render: (d: SpotifyApi.TrackObjectSimplified, i) => (\r\n                <td style={{width: \"10%\"}} key={i}>\r\n                    <div style={{whiteSpace: \"pre-wrap\"}}>{convertToMMSS(d.duration_ms / 1000)}</div>\r\n                </td>)\r\n        },\r\n\r\n    ]), [playTrack, toggleFromYourSavedTracks])\r\n\r\n    return (\r\n        <div>\r\n            <TracklistHeader imageUrl={album.images[0].url}\r\n                             type={album.type}\r\n                             setPlayerQueueHandler={setPlayerQueueHandler}\r\n                             name={album.name}>\r\n                <ArtistsLinks artists={album.artists} />\r\n            </TracklistHeader>\r\n            <Table model={testModel} data={album.tracks.items} disabled={false} contains={containsMySavedTracks}/>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Album;\r\n","C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\pages\\main\\yourLibrary\\recentlyPlayed\\RecentlyPlayed.tsx",[],"C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\components\\layout\\Layout.tsx",[],"C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\helpers\\helpers.ts",[],"C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\components\\layout\\Header.tsx",[],"C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\components\\layout\\Nav.tsx",[],"C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\components\\layout\\player\\Player.tsx",[],"C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\components\\common\\tracklist\\Tracklist.tsx",[],"C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\components\\layout\\appNav\\AppNav.tsx",[],"C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\components\\layout\\myLibraryNav\\MyLibraryNav.tsx",[],"C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\components\\layout\\player\\currentTrack\\CurrentTrack.tsx",[],"C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\store\\artist-reducer.ts",["231","232"],"import {createAsyncThunk, createSlice} from \"@reduxjs/toolkit\";\r\nimport {spotifyWebApi} from \"../api/spotify-web-api\";\r\nimport {getArrContainInMySavedTracks} from \"../helpers/helpers\";\r\nimport {getArtistPopularTracks, setArtistPopularTracks } from \"./tracklists-reducer\";\r\n\r\nconst initialState = {\r\n    artist: null as SpotifyApi.SingleArtistResponse | null,\r\n    albums: [] as  SpotifyApi.AlbumObjectSimplified[],\r\n    relatedArtists: [] as  SpotifyApi.ArtistObjectFull[],\r\n    containsMySavedTracks: [] as boolean[]\r\n}\r\n\r\nexport const getArtist = createAsyncThunk\r\n(\"getArtist\", async ({id}: {id: string}, {dispatch}) => {\r\n    let [artist, albums, relatedArtists] = await Promise\r\n        .all([\r\n            spotifyWebApi.getArtist(id),\r\n            spotifyWebApi.getArtistAlbums(id),\r\n            spotifyWebApi.getArtistRelatedArtists(id)\r\n        ])\r\n\r\n    await dispatch(getArtistPopularTracks({id}))\r\n\r\n    return {\r\n        artist: artist.body,\r\n        albums: albums.body.items,\r\n        relatedArtists: relatedArtists.body.artists,\r\n    }\r\n})\r\n\r\nexport const artistSlice = createSlice({\r\n    name: \"artist\",\r\n    initialState: initialState,\r\n    reducers: {},\r\n    extraReducers: builder => (\r\n        builder\r\n            .addCase(getArtist.fulfilled, (state, action) => {\r\n                state.artist = action.payload.artist\r\n                state.albums = action.payload.albums\r\n                state.relatedArtists = action.payload.relatedArtists\r\n            })\r\n    )\r\n})\r\n\r\n","C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\pages\\main\\artist\\Artist.tsx",["233","234","235"],"import React, {useCallback} from 'react';\r\nimport classes from './Artist.module.scss';\r\nimport PopularTracks from \"../../../components/artist/popularTracks/PopularTracks\";\r\nimport {Button} from \"../../../components/common/button/Button\";\r\nimport Image from \"../../../components/common/image/Image\";\r\nimport AlbumCards from \"../../../components/common/cards/AlbumCards\";\r\nimport {prettifyNumber} from '../../../helpers/helpers';\r\nimport TracklistHeader from \"../../../components/common/tracklist/TracklistHeader\";\r\n\r\ntype PropsType = {\r\n    artist: SpotifyApi.SingleArtistResponse\r\n    popularTracks: SpotifyApi.TrackObjectFull[]\r\n    albums: SpotifyApi.AlbumObjectSimplified[]\r\n    relatedArtists: SpotifyApi.ArtistObjectFull[]\r\n    containsMySavedTracks: boolean[]\r\n}\r\n\r\nconst Artist: React.FC<PropsType> = ({artist, albums, popularTracks, containsMySavedTracks, relatedArtists}) => {\r\n\r\n\r\n    const setPlayerQueue = useCallback(() => {\r\n\r\n    }, [])\r\n\r\n    return (\r\n        <div className={classes.artist}>\r\n            <TracklistHeader imageUrl={artist.images[1].url}\r\n                             name={artist.name}\r\n                             type={artist.type}\r\n                             followers={artist.followers.total}\r\n                             setPlayerQueueHandler={setPlayerQueue}>\r\n\r\n            </TracklistHeader>\r\n            <div className={classes.nav}></div>\r\n            <div className={classes.content}>\r\n                <PopularTracks tracks={popularTracks} containsMySavedTracks={containsMySavedTracks}/>\r\n                <div className={classes.artistAlbumsWrapper}>\r\n                    <h3 className={classes.title}>Albums</h3>\r\n                    <AlbumCards cards={albums}/>\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Artist;\r\n","C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\components\\common\\artistsLinks\\ArtistsLinks.tsx",[],"C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\components\\common\\card\\Card.tsx",[],"C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\components\\common\\card\\CardSkeleton.tsx",[],"C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\pages\\main\\artist\\ArtistContainer.tsx",["236"],"import React, {useEffect} from 'react';\r\nimport Artist from \"./Artist\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {useParams} from \"react-router-dom\";\r\nimport {AppRootStateType} from \"../../../store/store\";\r\nimport {getArtist} from \"../../../store/artist-reducer\";\r\nimport {getArrContainInMySavedTracks} from \"../../../helpers/helpers\";\r\n\r\nconst ArtistContainer = () => {\r\n\r\n    const dispatch = useDispatch()\r\n    let {id} = useParams<{ id: string }>()\r\n\r\n    const artist = useSelector<AppRootStateType, SpotifyApi.SingleArtistResponse | null>(state => state.artist.artist)\r\n    const albums = useSelector<AppRootStateType, SpotifyApi.AlbumObjectSimplified[]>(state => state.artist.albums)\r\n    const relatedArtists = useSelector<AppRootStateType, SpotifyApi.ArtistObjectFull[]>(state => state.artist.relatedArtists)\r\n    const containsMySavedTracks = useSelector<AppRootStateType, boolean[]>(state => state.tracklists.artistPopularTracks.containsMySavedTracks)\r\n    const popularTracks = useSelector<AppRootStateType, SpotifyApi.TrackObjectFull[]>(state => state.tracklists.artistPopularTracks.tracks)\r\n\r\n    console.log(\"artist related artists \", containsMySavedTracks, popularTracks)\r\n\r\n    useEffect(() => {\r\n        dispatch(getArtist({id}))\r\n    }, [id, dispatch])\r\n\r\n\r\n    return (\r\n        <>\r\n            {\r\n                (id !== artist?.id)\r\n                    ? <div style={{color: \"white\"}}>Loading</div>\r\n                    : <Artist artist={artist}\r\n                              popularTracks={popularTracks}\r\n                              albums={albums}\r\n                              containsMySavedTracks={containsMySavedTracks}\r\n                              relatedArtists={relatedArtists}/>\r\n            }\r\n        </>\r\n    );\r\n};\r\n\r\nexport default ArtistContainer;\r\n","C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\pages\\main\\album\\AlbumContainer.tsx",[],"C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\pages\\main\\playlist\\PlaylistContainer.tsx",[],"C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\pages\\main\\home\\HomeContainer.tsx",[],"C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\components\\common\\Table\\Table.tsx",[],"C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\components\\common\\button\\Button.tsx",[],"C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\components\\artist\\popularTracks\\PopularTracks.tsx",[],"C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\components\\common\\image\\Image.tsx",["237"],"import React, {useState} from 'react';\r\n\r\n\r\ninterface PropsType extends  React.DetailedHTMLProps<React.ImgHTMLAttributes<HTMLImageElement>, HTMLImageElement>{\r\n\r\n}\r\n\r\nconst Image: React.FC<PropsType> = React.memo((props) => {\r\n\r\n    let [imageLoaded, setImageLoaded] = useState(false)\r\n\r\n    return (\r\n        <img {...props} onLoad={() => setImageLoaded(true)}\r\n            style={{\r\n                opacity: imageLoaded ? 1 : 0,\r\n                transition: \"all .3s ease-out\"\r\n            }}\r\n        />\r\n\r\n    );\r\n})\r\n\r\nexport default Image;\r\n","C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\pages\\main\\yourLibrary\\myTopArtists\\myTopArtists.tsx",["238"],"import React, {useEffect} from 'react';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppRootStateType} from \"../../../../store/store\";\r\nimport {getMyTopArtists} from \"../../../../store/myLibrary-reducer\";\r\nimport ArtistCard from '../../../../components/common/artistCard/ArtistCard';\r\n\r\nconst MyTopArtists = () => {\r\n\r\n    const dispatch = useDispatch()\r\n    const myTopArtists = useSelector<AppRootStateType, SpotifyApi.ArtistObjectFull[]>(state => state.myLibrary.myTopArtists)\r\n\r\n    useEffect(() => {\r\n        dispatch(getMyTopArtists())\r\n    }, [])\r\n\r\n\r\n    return (\r\n        <div>\r\n            {myTopArtists.map(artist => (\r\n                <ArtistCard\r\n                    imageUrl={artist.images[0].url}\r\n                    link={artist.id}\r\n                    name={artist.name}\r\n                />\r\n                ))}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default MyTopArtists;\r\n",["239","240"],"C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\pages\\main\\yourLibrary\\myTopArtists\\MyTopArtists.tsx",[],"C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\pages\\main\\yourLibrary\\LikedTracks\\LikedTracks.tsx",["241"],"import React, {useCallback, useEffect} from 'react';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppRootStateType} from \"../../../../store/store\";\r\nimport Tracklist from \"../../../../components/common/tracklist/Tracklist\";\r\nimport {getMySavedTracks, toggleFromYourSavedTracks} from '../../../../store/myLibrary-reducer';\r\nimport classes from './LikedTracks.module.scss';\r\nimport TracklistHeader from \"../../../../components/common/tracklist/TracklistHeader\";\r\n\r\nconst LikedTracks = () => {\r\n\r\n    const dispatch = useDispatch()\r\n    const mySavedTracks = useSelector<AppRootStateType, Array<SpotifyApi.SavedTrackObject>>(state => state.myLibrary.mySavedTracks.tracks)\r\n    const containsMySavedTracks = useSelector<AppRootStateType, boolean[]>(state => state.myLibrary.mySavedTracks.containsMySavedTracks)\r\n\r\n    useEffect(() => {\r\n        dispatch(getMySavedTracks())\r\n    }, [dispatch])\r\n\r\n    const toggleFromYourSavedTracks_ = useCallback((trackId: string, value: boolean, index: number) => {\r\n        dispatch(toggleFromYourSavedTracks({trackId, value, index}))\r\n    }, [dispatch])\r\n\r\n    const playTracklist = useCallback((trackId: string, value: boolean, index: number) => {\r\n        mySavedTracks.map(track => track.track.id)\r\n        dispatch(toggleFromYourSavedTracks({trackId, value, index}))\r\n    }, [dispatch, mySavedTracks])\r\n\r\n    return (\r\n        <div className={classes.likedTracks}>\r\n            <TracklistHeader imageUrl={\"\"}\r\n                             name={\"LikedTracks\"}\r\n                             type={\"playlist\"}\r\n                             setPlayerQueueHandler={() => {}}\r\n            />\r\n            <Tracklist tracks={mySavedTracks}\r\n                       toggleFromYourSavedTracks={toggleFromYourSavedTracks_}\r\n                       containsMySavedTracks={containsMySavedTracks}/>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default LikedTracks;\r\n","C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\components\\common\\likeButton\\LikeButton.tsx",[],"C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\components\\common\\tracklist\\TracklistHeader.tsx",[],"C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\components\\common\\card\\ArtistCard.tsx",[],"C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\components\\common\\cards\\PlaylistCards.tsx",[],"C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\components\\common\\cards\\AlbumCards.tsx",[],"C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\components\\common\\card\\PlaylistCard.tsx",[],"C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\components\\common\\cards\\CardsWrapper.tsx",[],"C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\components\\common\\card\\AlbumCard.tsx",[],"C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\components\\common\\PlayCurrentButton\\PlayCurrentButton.tsx",[],"C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\components\\layout\\player\\TrackProgress.tsx",[],"C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\components\\layout\\player\\ControlButtons.tsx",["242","243","244","245"],"import React from 'react';\r\nimport classes from \"./ControlButtons.module.scss\";\r\nimport prevBtnSvg from \"../../../assets/UI/player/prev.svg\";\r\nimport playBtnSvg from \"../../../assets/UI/player/Play.svg\";\r\nimport pauseBtnSvg from \"../../../assets/UI/player/pause_icon.svg\";\r\nimport nextBtnSvg from \"../../../assets/UI/player/next_icon.png\";\r\n\r\ntype PropsType = {\r\n    play: () => void\r\n    pause: () => void\r\n    next: () => void\r\n    prev: () => void\r\n    paused: boolean\r\n}\r\n\r\nconst ControlButtons: React.FC<PropsType> = ({play, pause, prev, next, paused}) => {\r\n    return (\r\n        <div className={classes.controlButtons}>\r\n            <button className={classes.prevTrack} onClick={prev}>\r\n                <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"0 0 20 20\">\r\n                    <path className={classes.svgIcon}\r\n                          d=\"M14.4700011,4.1520017 L6.47000106,9.1520017 C5.84333298,9.54366925 5.84333298,10.4563308 6.47000106,10.8479983 L14.4700011,15.8479983 C15.1360491,16.2642783 16,15.7854355 16,15 L16,5 C16,4.21456446 15.1360491,3.73572169 14.4700011,4.1520017 Z M5,4 C4.44771525,4 4,4.44771525 4,5 L4,15 C4,15.5522847 4.44771525,16 5,16 C5.55228475,16 6,15.5522847 6,15 L6,5 C6,4.44771525 5.55228475,4 5,4 Z M14,6.80424764 L14,13.1957524 L8.88679623,10 L14,6.80424764 Z\"/>\r\n                </svg>\r\n            </button>\r\n            {paused\r\n                ? <button className={classes.playBtn} onClick={play}>\r\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"0 0 20 20\">\r\n                        <path className={classes.svgIcon}\r\n                              d=\"M5,4.00150607 C5,3.22971524 5.83721439,2.74884414 6.50387103,3.13772717 L16.503871,9.13772717 C17.1653763,9.52360527 17.1653763,10.4794069 16.503871,10.865285 L6.50387103,16.865285 C5.83721439,17.254168 5,16.7732969 5,16.0015061 L5,4.00150607 Z M7,5.74254307 L7,14.2604691 L14.0153651,10.0015061 L7,5.74254307 Z\"/>\r\n                    </svg>\r\n\r\n                </button>\r\n                : <button className={classes.pauseBtn} onClick={pause}>\r\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"0 0 20 20\">\r\n                        <path className={classes.svgIcon}\r\n                              d=\"M8,4 C8.55228475,4 9,4.44771525 9,5 L9,15 C9,15.5522847 8.55228475,16 8,16 C7.44771525,16 7,15.5522847 7,15 L7,5 C7,4.44771525 7.44771525,4 8,4 Z M12,4 C12.5522847,4 13,4.44771525 13,5 L13,15 C13,15.5522847 12.5522847,16 12,16 C11.4477153,16 11,15.5522847 11,15 L11,5 C11,4.44771525 11.4477153,4 12,4 Z\"/>\r\n                    </svg>\r\n                </button>\r\n            }\r\n            <button className={classes.nextTrack} onClick={next}>\r\n                <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"0 0 20 20\">\r\n                    <path className={classes.svgIcon}\r\n                          d=\"M5.52999894,4.1520017 L13.5299989,9.1520017 C14.156667,9.54366925 14.156667,10.4563308 13.5299989,10.8479983 L5.52999894,15.8479983 C4.86395093,16.2642783 4,15.7854355 4,15 L4,5 C4,4.21456446 4.86395093,3.73572169 5.52999894,4.1520017 Z M15,4 C15.5522847,4 16,4.44771525 16,5 L16,15 C16,15.5522847 15.5522847,16 15,16 C14.4477153,16 14,15.5522847 14,15 L14,5 C14,4.44771525 14.4477153,4 15,4 Z M6,6.80424764 L6,13.1957524 L11.1132038,10 L6,6.80424764 Z\"/>\r\n                </svg>\r\n            </button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ControlButtons;\r\n","C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\components\\layout\\player\\ExtendedControls.tsx",[],"C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\store\\tracklists-reducer.ts",[],{"ruleId":"246","replacedBy":"247"},{"ruleId":"248","replacedBy":"249"},{"ruleId":"250","severity":1,"message":"251","line":74,"column":9,"nodeType":"252","endLine":74,"endColumn":47,"suggestions":"253"},{"ruleId":"254","severity":1,"message":"255","line":3,"column":9,"nodeType":"256","messageId":"257","endLine":3,"endColumn":37},{"ruleId":"254","severity":1,"message":"258","line":4,"column":33,"nodeType":"256","messageId":"257","endLine":4,"endColumn":55},{"ruleId":"254","severity":1,"message":"259","line":4,"column":9,"nodeType":"256","messageId":"257","endLine":4,"endColumn":15},{"ruleId":"254","severity":1,"message":"260","line":5,"column":8,"nodeType":"256","messageId":"257","endLine":5,"endColumn":13},{"ruleId":"254","severity":1,"message":"261","line":7,"column":9,"nodeType":"256","messageId":"257","endLine":7,"endColumn":23},{"ruleId":"254","severity":1,"message":"255","line":7,"column":9,"nodeType":"256","messageId":"257","endLine":7,"endColumn":37},{"ruleId":"262","severity":1,"message":"263","line":13,"column":9,"nodeType":"264","endLine":18,"endColumn":11},{"ruleId":"250","severity":1,"message":"265","line":14,"column":8,"nodeType":"252","endLine":14,"endColumn":10,"suggestions":"266"},{"ruleId":"246","replacedBy":"267"},{"ruleId":"248","replacedBy":"268"},{"ruleId":"254","severity":1,"message":"269","line":23,"column":11,"nodeType":"256","messageId":"257","endLine":23,"endColumn":24},{"ruleId":"254","severity":1,"message":"270","line":3,"column":8,"nodeType":"256","messageId":"257","endLine":3,"endColumn":18},{"ruleId":"254","severity":1,"message":"271","line":4,"column":8,"nodeType":"256","messageId":"257","endLine":4,"endColumn":18},{"ruleId":"254","severity":1,"message":"272","line":5,"column":8,"nodeType":"256","messageId":"257","endLine":5,"endColumn":19},{"ruleId":"254","severity":1,"message":"273","line":6,"column":8,"nodeType":"256","messageId":"257","endLine":6,"endColumn":18},"no-native-reassign",["274"],"no-negated-in-lhs",["275"],"react-hooks/exhaustive-deps","React Hook useMemo has a missing dependency: 'album.images'. Either include it or remove the dependency array.","ArrayExpression",["276"],"@typescript-eslint/no-unused-vars","'getArrContainInMySavedTracks' is defined but never used.","Identifier","unusedVar","'setArtistPopularTracks' is defined but never used.","'Button' is defined but never used.","'Image' is defined but never used.","'prettifyNumber' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["277"],["274"],["275"],"'playTracklist' is assigned a value but never used.","'prevBtnSvg' is defined but never used.","'playBtnSvg' is defined but never used.","'pauseBtnSvg' is defined but never used.","'nextBtnSvg' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"278","fix":"279"},{"desc":"280","fix":"281"},"Update the dependencies array to be: [album.images, playTrack, toggleFromYourSavedTracks]",{"range":"282","text":"283"},"Update the dependencies array to be: [dispatch]",{"range":"284","text":"285"},[3102,3140],"[album.images, playTrack, toggleFromYourSavedTracks]",[569,571],"[dispatch]"]