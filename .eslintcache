[{"C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\index.tsx":"1","C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\reportWebVitals.ts":"2","C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\App.tsx":"3","C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\api\\api.ts":"4","C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\store\\store.ts":"5","C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\store\\app-reducer.ts":"6","C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\pages\\home\\Home.tsx":"7","C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\pages\\login\\Login.tsx":"8","C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\api\\spotify-web-api.ts":"9","C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\store\\home-reducer.ts":"10","C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\components\\layout\\Layout.tsx":"11","C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\components\\layout\\Header.tsx":"12","C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\components\\layout\\Nav.tsx":"13","C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\components\\layout\\appNav\\AppNav.tsx":"14","C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\components\\layout\\myLibraryNav\\MyLibraryNav.tsx":"15","C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\assets\\UI\\Table\\Table.tsx":"16","C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\pages\\home\\yourLibrary\\recentlyPlayed\\RecentlyPlayed.tsx":"17","C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\pages\\home\\yourLibrary\\LikedTracks\\LikedTracks.tsx":"18","C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\store\\player-reducer.ts":"19","C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\components\\layout\\player\\Player.tsx":"20","C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\components\\layout\\player\\currentTrack\\CurrentTrack.tsx":"21"},{"size":736,"mtime":1610173267253,"results":"22","hashOfConfig":"23"},{"size":425,"mtime":1607317929848,"results":"24","hashOfConfig":"23"},{"size":1107,"mtime":1610118311499,"results":"25","hashOfConfig":"23"},{"size":1643,"mtime":1610271477229,"results":"26","hashOfConfig":"23"},{"size":506,"mtime":1610347433867,"results":"27","hashOfConfig":"23"},{"size":770,"mtime":1610346353797,"results":"28","hashOfConfig":"23"},{"size":816,"mtime":1610278437870,"results":"29","hashOfConfig":"23"},{"size":793,"mtime":1610115202790,"results":"30","hashOfConfig":"23"},{"size":101,"mtime":1610119192532,"results":"31","hashOfConfig":"23"},{"size":1593,"mtime":1610345895795,"results":"32","hashOfConfig":"23"},{"size":488,"mtime":1610360476342,"results":"33","hashOfConfig":"23"},{"size":777,"mtime":1610207924939,"results":"34","hashOfConfig":"23"},{"size":418,"mtime":1610201734089,"results":"35","hashOfConfig":"23"},{"size":1129,"mtime":1610257856100,"results":"36","hashOfConfig":"23"},{"size":987,"mtime":1610207018817,"results":"37","hashOfConfig":"23"},{"size":1092,"mtime":1610276307669,"results":"38","hashOfConfig":"23"},{"size":2822,"mtime":1610358370075,"results":"39","hashOfConfig":"23"},{"size":2719,"mtime":1610369807472,"results":"40","hashOfConfig":"23"},{"size":733,"mtime":1610361402563,"results":"41","hashOfConfig":"23"},{"size":4404,"mtime":1610361381932,"results":"42","hashOfConfig":"23"},{"size":760,"mtime":1610361156074,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"1vm27yo",{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"46"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"46"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"46"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\index.tsx",[],["90","91"],"C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\reportWebVitals.ts",[],"C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\App.tsx",[],"C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\api\\api.ts",[],"C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\store\\store.ts",[],"C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\store\\app-reducer.ts",[],"C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\pages\\home\\Home.tsx",["92","93"],"import React, {useEffect} from 'react';\r\nimport {useDispatch} from \"react-redux\";\r\nimport { getMyInfo } from '../../store/home-reducer';\r\nimport Layout from \"../../components/layout/Layout\";\r\nimport {Route, Switch } from 'react-router-dom';\r\nimport RecentlyPlayed from \"./yourLibrary/recentlyPlayed/RecentlyPlayed\";\r\nimport LikedTracks from \"./yourLibrary/LikedTracks/LikedTracks\";\r\n\r\nconst Home:React.FC = ({}) => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n\r\n    useEffect(() => {\r\n        dispatch(getMyInfo())\r\n    },[])\r\n\r\n\r\n\r\n    return (\r\n        <Layout>\r\n            <Switch>\r\n                <Route path={\"/recently-played\"} component={RecentlyPlayed} />\r\n                <Route path={\"/liked-songs\"} component={LikedTracks} />\r\n            </Switch>\r\n        </Layout>\r\n    );\r\n};\r\n\r\nexport default Home;\r\n","C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\pages\\login\\Login.tsx",[],"C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\api\\spotify-web-api.ts",[],"C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\store\\home-reducer.ts",["94"],"import {createAsyncThunk, createSlice, PayloadAction} from \"@reduxjs/toolkit\";\r\nimport {spotifyWebApi} from \"../api/spotify-web-api\";\r\n\r\nconst initialState = {\r\n    displayName: \"\" as string | undefined,\r\n    myRecentlyPlayedTracks: [] as Array<SpotifyApi.PlayHistoryObject>,\r\n    mySavedTracks: [] as Array<SpotifyApi.SavedTrackObject>\r\n}\r\n\r\nexport type HomeStateType = typeof initialState\r\n\r\nexport const getMyInfo = createAsyncThunk\r\n(\"getMyInfo\", async (arg, thunkAPI) => {\r\n    let result = await spotifyWebApi.getMe()\r\n    console.log(result)\r\n    return result.display_name\r\n})\r\n\r\nexport const getMyRecentlyPlayedTracks = createAsyncThunk\r\n(\"getMyRecentlyPlayedTracks\", async (arg, thunkAPI) => {\r\n    let result = await spotifyWebApi.getMyRecentlyPlayedTracks()\r\n    return result.items\r\n})\r\nexport const getMySavedTracks = createAsyncThunk\r\n(\"getMySavedTracks\", async (arg, thunkAPI) => {\r\n    let result = await spotifyWebApi.getMySavedTracks()\r\n    return result.items\r\n})\r\n\r\nexport const homeSlice = createSlice({\r\n    name: \"home\",\r\n    initialState: initialState,\r\n    reducers: {},\r\n    extraReducers: builder => (\r\n        builder\r\n            .addCase(getMyInfo.fulfilled, (state, action) => {\r\n                state.displayName = action.payload\r\n            })\r\n            .addCase(getMyRecentlyPlayedTracks.fulfilled, (state, action) => {\r\n                state.myRecentlyPlayedTracks = action.payload\r\n            })\r\n            .addCase(getMySavedTracks.fulfilled, (state, action) => {\r\n                state.mySavedTracks = action.payload\r\n            })\r\n    )\r\n})\r\n\r\n","C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\components\\layout\\Layout.tsx",[],"C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\components\\layout\\Header.tsx",[],"C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\components\\layout\\Nav.tsx",[],"C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\components\\layout\\appNav\\AppNav.tsx",[],"C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\components\\layout\\myLibraryNav\\MyLibraryNav.tsx",[],"C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\assets\\UI\\Table\\Table.tsx",[],"C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\pages\\home\\yourLibrary\\recentlyPlayed\\RecentlyPlayed.tsx",["95","96"],"import React, {useEffect, useMemo} from 'react';\r\nimport Table, {ITableModel} from \"../../../../assets/UI/Table/Table\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppRootStateType} from \"../../../../store/store\";\r\nimport {getMyRecentlyPlayedTracks} from \"../../../../store/home-reducer\";\r\nimport { setTrack } from '../../../../store/player-reducer';\r\n\r\nconst RecentlyPlayed = () => {\r\n\r\n\r\n\r\n    const dispatch = useDispatch()\r\n    const myRecentlyPlayedTracks = useSelector<AppRootStateType, Array<SpotifyApi.PlayHistoryObject>>(state => state.home.myRecentlyPlayedTracks)\r\n\r\n    console.log(myRecentlyPlayedTracks)\r\n\r\n    const playTrack = (track: SpotifyApi.TrackObjectSimplified) => {\r\n        dispatch(setTrack(track))\r\n    }\r\n\r\n    const testModel: ITableModel[] = useMemo(() => ([\r\n        {\r\n            title: (i: number) => (<th style={{width: \"10%\", paddingLeft: \"20px\"}} key={i}>\r\n                <span>preview</span>\r\n            </th>),\r\n            render: (d:  SpotifyApi.PlayHistoryObject, i: number) => (\r\n                <td style={{width: \"10%\", paddingLeft: \"20px\"}} key={i}>\r\n                    <button onClick={() => playTrack(d.track)}>Play</button>\r\n                </td>)\r\n        },\r\n        {\r\n            title: (i: number) => (<th style={{width: \"30%\", paddingLeft: \"20px\"}} key={i}>\r\n                <span>Name</span>\r\n            </th>),\r\n            render: (d:  SpotifyApi.PlayHistoryObject, i: number) => (\r\n                <td style={{width: \"30%\", paddingLeft: \"20px\"}} key={i}>\r\n                    <div style={{whiteSpace: \"pre-wrap\"}}>{d.track.name}</div>\r\n                </td>)\r\n        },\r\n        {\r\n            title: (i: number) => (<th style={{width: \"30%\", paddingLeft: \"20px\"}} key={i}>\r\n                <span>Artist</span>\r\n            </th>),\r\n            render: (d:  SpotifyApi.PlayHistoryObject, i: number) => (\r\n                <td style={{width: \"30%\", paddingLeft: \"20px\"}} key={i}>\r\n                    <div style={{whiteSpace: \"pre-wrap\"}}>{d.track.artists.map(artist => artist.name).join(\", \")}</div>\r\n                </td>)\r\n        },\r\n        {\r\n            title: (i: number) => (<th style={{width: \"30%\", paddingLeft: \"20px\"}} key={i}>\r\n                <span>Artist</span>\r\n            </th>),\r\n            render: (d:  SpotifyApi.PlayHistoryObject, i: number) => (\r\n                <td style={{width: \"30%\", paddingLeft: \"20px\"}} key={i}>\r\n                    <div style={{whiteSpace: \"pre-wrap\"}}>{d.track.uri}</div>\r\n                </td>)\r\n        },\r\n\r\n    ]), [])\r\n\r\n    useEffect(() => {\r\n        dispatch(getMyRecentlyPlayedTracks())\r\n    }, [])\r\n\r\n    return (\r\n        <div>\r\n            <Table model={testModel} data={myRecentlyPlayedTracks} disabled={false} />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default RecentlyPlayed;\r\n","C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\pages\\home\\yourLibrary\\LikedTracks\\LikedTracks.tsx",["97","98"],"C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\store\\player-reducer.ts",[],"C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\components\\layout\\player\\Player.tsx",[],"C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\components\\layout\\player\\currentTrack\\CurrentTrack.tsx",[],{"ruleId":"99","replacedBy":"100"},{"ruleId":"101","replacedBy":"102"},{"ruleId":"103","severity":1,"message":"104","line":9,"column":24,"nodeType":"105","messageId":"106","endLine":9,"endColumn":26},{"ruleId":"107","severity":1,"message":"108","line":16,"column":7,"nodeType":"109","endLine":16,"endColumn":9,"suggestions":"110"},{"ruleId":"111","severity":1,"message":"112","line":1,"column":40,"nodeType":"113","messageId":"114","endLine":1,"endColumn":53},{"ruleId":"107","severity":1,"message":"115","line":59,"column":9,"nodeType":"109","endLine":59,"endColumn":11,"suggestions":"116"},{"ruleId":"107","severity":1,"message":"108","line":63,"column":8,"nodeType":"109","endLine":63,"endColumn":10,"suggestions":"117"},{"ruleId":"107","severity":1,"message":"115","line":55,"column":9,"nodeType":"109","endLine":55,"endColumn":11,"suggestions":"118"},{"ruleId":"107","severity":1,"message":"108","line":59,"column":8,"nodeType":"109","endLine":59,"endColumn":10,"suggestions":"119"},"no-native-reassign",["120"],"no-negated-in-lhs",["121"],"no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["122"],"@typescript-eslint/no-unused-vars","'PayloadAction' is defined but never used.","Identifier","unusedVar","React Hook useMemo has a missing dependency: 'playTrack'. Either include it or remove the dependency array.",["123"],["124"],["125"],["126"],"no-global-assign","no-unsafe-negation",{"desc":"127","fix":"128"},{"desc":"129","fix":"130"},{"desc":"127","fix":"131"},{"desc":"129","fix":"132"},{"desc":"127","fix":"133"},"Update the dependencies array to be: [dispatch]",{"range":"134","text":"135"},"Update the dependencies array to be: [playTrack]",{"range":"136","text":"137"},{"range":"138","text":"135"},{"range":"139","text":"137"},{"range":"140","text":"135"},[520,522],"[dispatch]",[2552,2554],"[playTrack]",[2636,2638],[2470,2472],[2545,2547]]