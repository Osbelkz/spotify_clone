[{"C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\index.tsx":"1","C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\reportWebVitals.ts":"2","C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\store\\store.ts":"3","C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\App.tsx":"4","C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\store\\app-reducer.ts":"5","C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\store\\home-reducer.ts":"6","C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\store\\myLibrary-reducer.ts":"7","C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\store\\player-reducer.ts":"8","C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\store\\album-reducer.ts":"9","C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\store\\playlist-reducer.ts":"10","C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\pages\\login\\Login.tsx":"11","C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\pages\\main\\Main.tsx":"12","C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\api\\spotify-web-api.ts":"13","C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\api\\api.ts":"14","C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\pages\\main\\home\\Home.tsx":"15","C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\pages\\main\\playlist\\Playlist.tsx":"16","C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\pages\\main\\album\\Album.tsx":"17","C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\pages\\main\\yourLibrary\\recentlyPlayed\\RecentlyPlayed.tsx":"18","C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\pages\\main\\yourLibrary\\LikedTracks\\LikedTracks.tsx":"19","C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\components\\layout\\Layout.tsx":"20","C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\helpers\\helpers.ts":"21","C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\components\\layout\\Header.tsx":"22","C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\components\\layout\\Nav.tsx":"23","C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\components\\layout\\player\\Player.tsx":"24","C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\components\\common\\playlistCard\\PlaylistCard.tsx":"25","C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\components\\common\\tracklist\\Tracklist.tsx":"26","C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\components\\layout\\appNav\\AppNav.tsx":"27","C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\components\\layout\\myLibraryNav\\MyLibraryNav.tsx":"28","C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\components\\layout\\player\\currentTrack\\CurrentTrack.tsx":"29","C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\store\\artist-reducer.ts":"30","C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\pages\\main\\artist\\Artist.tsx":"31","C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\components\\common\\artistsLinks\\ArtistsLinks.tsx":"32","C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\components\\common\\cards\\Cards.tsx":"33","C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\components\\common\\card\\Card.tsx":"34","C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\components\\common\\albumCard\\AlbumCard.tsx":"35","C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\components\\common\\card\\CardSkeleton.tsx":"36","C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\pages\\main\\artist\\ArtistContainer.tsx":"37","C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\pages\\main\\album\\AlbumContainer.tsx":"38","C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\pages\\main\\playlist\\PlaylistContainer.tsx":"39","C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\pages\\main\\home\\HomeContainer.tsx":"40","C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\components\\common\\Table\\Table.tsx":"41","C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\components\\common\\button\\Button.tsx":"42","C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\components\\artist\\popularTracks\\PopularTracks.tsx":"43","C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\components\\tracklistHeader\\TracklistHeader.tsx":"44","C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\components\\common\\image\\Image.tsx":"45","C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\pages\\main\\yourLibrary\\myTopArtists\\myTopArtists.tsx":"46","C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\components\\common\\artistCard\\ArtistCard.tsx":"47","C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\pages\\main\\yourLibrary\\myTopArtists\\MyTopArtists.tsx":"48"},{"size":912,"mtime":1610633256770,"results":"49","hashOfConfig":"50"},{"size":425,"mtime":1607317929848,"results":"51","hashOfConfig":"50"},{"size":846,"mtime":1610615971852,"results":"52","hashOfConfig":"50"},{"size":1107,"mtime":1610529283982,"results":"53","hashOfConfig":"50"},{"size":768,"mtime":1610608960159,"results":"54","hashOfConfig":"50"},{"size":1991,"mtime":1611077859292,"results":"55","hashOfConfig":"50"},{"size":2162,"mtime":1611937542944,"results":"56","hashOfConfig":"50"},{"size":783,"mtime":1610611781454,"results":"57","hashOfConfig":"50"},{"size":953,"mtime":1611937622844,"results":"58","hashOfConfig":"50"},{"size":1009,"mtime":1611937565843,"results":"59","hashOfConfig":"50"},{"size":793,"mtime":1610115202790,"results":"60","hashOfConfig":"50"},{"size":1476,"mtime":1611826434007,"results":"61","hashOfConfig":"50"},{"size":454,"mtime":1610615330765,"results":"62","hashOfConfig":"50"},{"size":1643,"mtime":1610271477229,"results":"63","hashOfConfig":"50"},{"size":1059,"mtime":1611484691453,"results":"64","hashOfConfig":"50"},{"size":1033,"mtime":1611904729681,"results":"65","hashOfConfig":"50"},{"size":2773,"mtime":1611902569063,"results":"66","hashOfConfig":"50"},{"size":1067,"mtime":1611937130436,"results":"67","hashOfConfig":"50"},{"size":991,"mtime":1611937130415,"results":"68","hashOfConfig":"50"},{"size":488,"mtime":1610360476342,"results":"69","hashOfConfig":"50"},{"size":865,"mtime":1611921201900,"results":"70","hashOfConfig":"50"},{"size":777,"mtime":1610207924939,"results":"71","hashOfConfig":"50"},{"size":418,"mtime":1610201734089,"results":"72","hashOfConfig":"50"},{"size":4735,"mtime":1611061055401,"results":"73","hashOfConfig":"50"},{"size":496,"mtime":1611828811835,"results":"74","hashOfConfig":"50"},{"size":3081,"mtime":1611923285241,"results":"75","hashOfConfig":"50"},{"size":1129,"mtime":1610257856100,"results":"76","hashOfConfig":"50"},{"size":987,"mtime":1610207018817,"results":"77","hashOfConfig":"50"},{"size":930,"mtime":1610622933359,"results":"78","hashOfConfig":"50"},{"size":1544,"mtime":1611937724444,"results":"79","hashOfConfig":"50"},{"size":2376,"mtime":1611923285271,"results":"80","hashOfConfig":"50"},{"size":632,"mtime":1610622933351,"results":"81","hashOfConfig":"50"},{"size":992,"mtime":1611676392843,"results":"82","hashOfConfig":"50"},{"size":867,"mtime":1611828566634,"results":"83","hashOfConfig":"50"},{"size":587,"mtime":1611828811848,"results":"84","hashOfConfig":"50"},{"size":438,"mtime":1611066696528,"results":"85","hashOfConfig":"50"},{"size":1743,"mtime":1611923285261,"results":"86","hashOfConfig":"50"},{"size":1327,"mtime":1611902569072,"results":"87","hashOfConfig":"50"},{"size":1210,"mtime":1611904729660,"results":"88","hashOfConfig":"50"},{"size":1100,"mtime":1611484691461,"results":"89","hashOfConfig":"50"},{"size":1186,"mtime":1611902799758,"results":"90","hashOfConfig":"50"},{"size":495,"mtime":1611657297282,"results":"91","hashOfConfig":"50"},{"size":2813,"mtime":1611936822516,"results":"92","hashOfConfig":"50"},{"size":1528,"mtime":1611828383689,"results":"93","hashOfConfig":"50"},{"size":547,"mtime":1611830872729,"results":"94","hashOfConfig":"50"},{"size":911,"mtime":1611825628921,"results":"95","hashOfConfig":"50"},{"size":747,"mtime":1611830900673,"results":"96","hashOfConfig":"50"},{"size":1147,"mtime":1611830963442,"results":"97","hashOfConfig":"50"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},"1vm27yo",{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"100"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"100"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"100"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"100"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155","usedDeprecatedRules":"100"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"179","usedDeprecatedRules":"100"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"182","usedDeprecatedRules":"100"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"185","usedDeprecatedRules":"100"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"188","usedDeprecatedRules":"100"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"195","usedDeprecatedRules":"100"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"200","usedDeprecatedRules":"100"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"203","usedDeprecatedRules":"204"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"209","usedDeprecatedRules":"100"},"C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\index.tsx",[],["210","211"],"C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\reportWebVitals.ts",[],"C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\store\\store.ts",[],"C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\App.tsx",[],"C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\store\\app-reducer.ts",[],"C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\store\\home-reducer.ts",[],"C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\store\\myLibrary-reducer.ts",[],"C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\store\\player-reducer.ts",[],"C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\store\\album-reducer.ts",[],"C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\store\\playlist-reducer.ts",[],"C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\pages\\login\\Login.tsx",[],"C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\pages\\main\\Main.tsx",["212","213"],"import React, {useEffect} from 'react';\r\nimport {useDispatch} from \"react-redux\";\r\nimport { getMyInfo } from '../../store/home-reducer';\r\nimport Layout from \"../../components/layout/Layout\";\r\nimport {Route, Switch } from 'react-router-dom';\r\nimport RecentlyPlayed from \"./yourLibrary/recentlyPlayed/RecentlyPlayed\";\r\nimport LikedTracks from \"./yourLibrary/LikedTracks/LikedTracks\";\r\nimport ArtistContainer from \"./artist/ArtistContainer\";\r\nimport AlbumContainer from \"./album/AlbumContainer\";\r\nimport PlaylistContainer from \"./playlist/PlaylistContainer\";\r\nimport HomeContainer from \"./home/HomeContainer\";\r\nimport MyTopArtists from \"./yourLibrary/myTopArtists/MyTopArtists\";\r\n\r\nconst Main:React.FC = ({}) => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n\r\n    useEffect(() => {\r\n        dispatch(getMyInfo())\r\n    },[])\r\n\r\n\r\n\r\n    return (\r\n        <Layout>\r\n            <Switch>\r\n                <Route path={\"/\"} exact component={HomeContainer}/>\r\n                <Route path={\"/album/:id\"} component={AlbumContainer}/>\r\n                <Route path={\"/playlist/:id\"} component={PlaylistContainer}/>\r\n                <Route path={\"/artist/:id\"} component={ArtistContainer}/>\r\n                <Route path={\"/recently-played\"} component={RecentlyPlayed} />\r\n                <Route path={\"/liked-songs\"} component={LikedTracks} />\r\n                <Route path={\"/artists\"} component={MyTopArtists} />\r\n            </Switch>\r\n        </Layout>\r\n    );\r\n};\r\n\r\nexport default Main;\r\n","C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\api\\spotify-web-api.ts",[],"C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\api\\api.ts",[],"C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\pages\\main\\home\\Home.tsx",[],"C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\pages\\main\\playlist\\Playlist.tsx",[],"C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\pages\\main\\album\\Album.tsx",["214"],"import React, {useMemo} from 'react';\r\n\r\nimport Table, {ITableModel} from \"../../../components/common/Table/Table\";\r\nimport {convertToMMSS} from \"../../../helpers/helpers\";\r\nimport ArtistsLinks from \"../../../components/common/artistsLinks/ArtistsLinks\";\r\nimport TracklistHeader from \"../../../components/tracklistHeader/TracklistHeader\";\r\n\r\n\r\ntype PropsType = {\r\n    playTrack: (trackId: string) => void\r\n    album: SpotifyApi.SingleAlbumResponse\r\n}\r\n\r\n\r\nconst Album: React.FC<PropsType> = ({playTrack, album}) => {\r\n\r\n    const testModel: ITableModel[] = useMemo(() => ([\r\n        {\r\n            title: (i: number) => (\r\n                <th style={{width: \"10%\"}} key={i}>\r\n                    <span>preview</span>\r\n                </th>),\r\n            render: (d: SpotifyApi.TrackObjectSimplified, i: number) => (\r\n                <td style={{width: \"10%\"}} key={i}>\r\n                    <button onClick={() => playTrack(d.id)}>Play</button>\r\n                </td>)\r\n        },\r\n        {\r\n            title: (i: number) => (\r\n                <th style={{width: \"30%\"}} key={i}>\r\n                    <span>Name</span>\r\n                </th>),\r\n            render: (d: SpotifyApi.TrackObjectSimplified, i: number) => (\r\n                <td style={{width: \"30%\"}} key={i}>\r\n                    <div style={{whiteSpace: \"pre-wrap\"}}>{d.name}</div>\r\n                </td>)\r\n        },\r\n        {\r\n            title: (i: number) => (\r\n                <th style={{width: \"30%\"}} key={i}>\r\n                    <span>Artist</span>\r\n                </th>),\r\n            render: (d: SpotifyApi.TrackObjectSimplified, i: number) => (\r\n                <td style={{width: \"30%\"}} key={i}>\r\n                    <ArtistsLinks artists={d.artists} />\r\n                </td>)\r\n        },\r\n        {\r\n            title: (i: number) => (\r\n                <th style={{width: \"10%\"}} key={i}>\r\n                    <span>Duration</span>\r\n                </th>),\r\n            render: (d: SpotifyApi.TrackObjectSimplified, i: number) => (\r\n                <td style={{width: \"10%\"}} key={i}>\r\n                    <div style={{whiteSpace: \"pre-wrap\"}}>{convertToMMSS(d.duration_ms / 1000)}</div>\r\n                </td>)\r\n        },\r\n\r\n    ]), [])\r\n\r\n    return (\r\n        <div>\r\n            <TracklistHeader imageUrl={album.images[0].url}\r\n                             type={album.type}\r\n                             name={album.name}>\r\n                <ArtistsLinks artists={album.artists} />\r\n            </TracklistHeader>\r\n            <Table model={testModel} data={album.tracks.items} disabled={false}/>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Album;\r\n","C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\pages\\main\\yourLibrary\\recentlyPlayed\\RecentlyPlayed.tsx",["215"],"import React, {useEffect} from 'react';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppRootStateType} from \"../../../../store/store\";\r\nimport Tracklist from \"../../../../components/common/tracklist/Tracklist\";\r\nimport { getMyRecentlyPlayedTracks } from '../../../../store/myLibrary-reducer';\r\nimport classes from \"./RecentlyPlayed.module.scss\";\r\n\r\n\r\nconst RecentlyPlayed = () => {\r\n\r\n    const dispatch = useDispatch()\r\n    const myRecentlyPlayedTracks = useSelector<AppRootStateType, Array<SpotifyApi.PlayHistoryObject>>(state => state.myLibrary.myRecentlyPlayedTracks)\r\n\r\n\r\n    useEffect(() => {\r\n        dispatch(getMyRecentlyPlayedTracks())\r\n    }, [])\r\n\r\n    return (\r\n        <div className={classes.recentlyPlayed}>\r\n            <Tracklist tracks={myRecentlyPlayedTracks} />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default RecentlyPlayed;\r\n","C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\pages\\main\\yourLibrary\\LikedTracks\\LikedTracks.tsx",["216"],"import React, {useEffect} from 'react';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppRootStateType} from \"../../../../store/store\";\r\nimport Tracklist from \"../../../../components/common/tracklist/Tracklist\";\r\nimport {getMySavedTracks} from '../../../../store/myLibrary-reducer';\r\nimport classes from './LikedTracks.module.scss';\r\n\r\nconst LikedTracks = () => {\r\n\r\n    const dispatch = useDispatch()\r\n    const mySavedTracks = useSelector<AppRootStateType, Array<SpotifyApi.SavedTrackObject>>(state => state.myLibrary.mySavedTracks)\r\n\r\n    useEffect(() => {\r\n        dispatch(getMySavedTracks())\r\n    }, [])\r\n\r\n    return (\r\n        <div className={classes.likedTracks}>\r\n            <Tracklist tracks={mySavedTracks}/>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default LikedTracks;\r\n","C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\components\\layout\\Layout.tsx",[],"C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\helpers\\helpers.ts",[],"C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\components\\layout\\Header.tsx",[],"C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\components\\layout\\Nav.tsx",[],"C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\components\\layout\\player\\Player.tsx",[],"C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\components\\common\\playlistCard\\PlaylistCard.tsx",[],"C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\components\\common\\tracklist\\Tracklist.tsx",["217"],"import React, {useMemo} from 'react';\r\nimport Table, {ITableModel} from \"../Table/Table\";\r\nimport {convertToMMSS} from \"../../../helpers/helpers\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {getTrack} from \"../../../store/player-reducer\";\r\nimport ArtistsLinks from \"../artistsLinks/ArtistsLinks\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\ntype PropsType = {\r\n    tracks: Array<SpotifyApi.SavedTrackObject | SpotifyApi.PlayHistoryObject>\r\n    containsMySavedTracks?: boolean[]\r\n}\r\n\r\nconst Tracklist: React.FC<PropsType> = ({tracks, containsMySavedTracks = []}) => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const playTrack = (trackId: string) => {\r\n        dispatch(getTrack({trackId}))\r\n    }\r\n    console.log(\"tracklist\", tracks)\r\n\r\n    const testModel: ITableModel[] = useMemo(() => ([\r\n        {\r\n            title: (i) => (\r\n                <th style={{width: \"10%\"}} key={i}>\r\n                    <span>preview</span>\r\n                </th>),\r\n            render: (d: SpotifyApi.SavedTrackObject, i, _, contains) => (\r\n                <td style={{width: \"10%\"}} key={i}>\r\n                    <button onClick={() => playTrack(d.track.id)}>Play</button>\r\n                    <div>{contains ? \"yes\" : \"no\"}</div>\r\n                </td>)\r\n        },\r\n        {\r\n            title: (i) => (\r\n                <th style={{width: \"30%\"}} key={i}>\r\n                    <span>Name</span>\r\n                </th>),\r\n            render: (d: SpotifyApi.SavedTrackObject, i) => (\r\n                <td style={{width: \"30%\"}} key={i}>\r\n                    <div style={{whiteSpace: \"pre-wrap\"}}>{d.track.name}</div>\r\n                </td>)\r\n        },\r\n        {\r\n            title: (i) => (\r\n                <th style={{width: \"30%\"}} key={i}>\r\n                    <span>Artist</span>\r\n                </th>),\r\n            render: (d: SpotifyApi.SavedTrackObject, i) => (\r\n                <td style={{width: \"30%\"}} key={i}>\r\n                    <ArtistsLinks artists={d.track.artists}/>\r\n                </td>)\r\n        },\r\n        {\r\n            title: (i) => (\r\n                <th style={{width: \"30%\"}} key={i}>\r\n                    <span>Album</span>\r\n                </th>),\r\n            render: (d: SpotifyApi.SavedTrackObject, i) => (\r\n                <td style={{width: \"30%\"}} key={i}>\r\n                    <Link to={{pathname: `/album/${d.track.album.id}`}} style={{whiteSpace: \"pre-wrap\", color: \"inherit\"}}>{d.track.album.name}</Link>\r\n                </td>)\r\n        },\r\n        {\r\n            title: (i) => (\r\n                <th style={{width: \"10%\"}} key={i}>\r\n                    <span>Duration</span>\r\n                </th>),\r\n            render: (d: SpotifyApi.SavedTrackObject, i) => (\r\n                <td style={{width: \"30%\"}} key={i}>\r\n                    <div style={{whiteSpace: \"pre-wrap\"}}>{convertToMMSS(d.track.duration_ms / 1000)}</div>\r\n                </td>)\r\n        },\r\n\r\n    ]), [])\r\n\r\n\r\n    return (\r\n        <Table model={testModel} data={tracks} contains={containsMySavedTracks} disabled={false}/>\r\n    );\r\n};\r\n\r\nexport default Tracklist;\r\n","C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\components\\layout\\appNav\\AppNav.tsx",[],"C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\components\\layout\\myLibraryNav\\MyLibraryNav.tsx",[],"C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\components\\layout\\player\\currentTrack\\CurrentTrack.tsx",[],"C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\store\\artist-reducer.ts",[],"C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\pages\\main\\artist\\Artist.tsx",[],"C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\components\\common\\artistsLinks\\ArtistsLinks.tsx",[],"C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\components\\common\\cards\\Cards.tsx",[],"C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\components\\common\\card\\Card.tsx",[],["218","219"],"C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\components\\common\\albumCard\\AlbumCard.tsx",[],"C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\components\\common\\card\\CardSkeleton.tsx",[],"C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\pages\\main\\artist\\ArtistContainer.tsx",["220"],"import React, {useEffect} from 'react';\r\nimport Artist from \"./Artist\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {useParams} from \"react-router-dom\";\r\nimport {AppRootStateType} from \"../../../store/store\";\r\nimport {getArtist} from \"../../../store/artist-reducer\";\r\n\r\nconst ArtistContainer = () => {\r\n\r\n    const dispatch = useDispatch()\r\n    let {id} = useParams<{ id: string }>()\r\n\r\n    const artist = useSelector<AppRootStateType, SpotifyApi.SingleArtistResponse | null>(state => state.artist.artist)\r\n    const popularTracks = useSelector<AppRootStateType, SpotifyApi.TrackObjectFull[]>(state => state.artist.popularTracks)\r\n    const albums = useSelector<AppRootStateType, SpotifyApi.AlbumObjectSimplified[]>(state => state.artist.albums)\r\n    const relatedArtists = useSelector<AppRootStateType, SpotifyApi.ArtistObjectFull[]>(state => state.artist.relatedArtists)\r\n\r\n    console.log(\"artist\", artist)\r\n    console.log(\"artist popular tracks \", popularTracks)\r\n    console.log(\"artist albums \", albums)\r\n    console.log(\"artist related artists \", relatedArtists)\r\n\r\n    useEffect(() => {\r\n        dispatch(getArtist({id}))\r\n    }, [id])\r\n\r\n\r\n    return (\r\n        <>\r\n            {\r\n                (id !== artist?.id)\r\n                    ? <div style={{color: \"white\"}}>Loading</div>\r\n                    : <Artist artist={artist}\r\n                              popularTracks={popularTracks}\r\n                              albums={albums}\r\n                              relatedArtists={relatedArtists}/>\r\n            }\r\n        </>\r\n    );\r\n};\r\n\r\nexport default ArtistContainer;\r\n","C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\pages\\main\\album\\AlbumContainer.tsx",["221","222"],"import React, {useCallback, useEffect} from 'react';\r\nimport {useParams} from \"react-router-dom\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppRootStateType} from \"../../../store/store\";\r\nimport {getAlbum} from \"../../../store/album-reducer\";\r\nimport {getTrack} from \"../../../store/player-reducer\";\r\nimport Album from \"./Album\";\r\n\r\nconst AlbumContainer = () => {\r\n\r\n    let {id} = useParams<{ id: string }>()\r\n\r\n    const dispatch = useDispatch()\r\n    const album = useSelector<AppRootStateType, SpotifyApi.SingleAlbumResponse | null>(state => state.album.album)\r\n    const containsMySavedTracks = useSelector<AppRootStateType, boolean[]>(state => state.album.containsMySavedTracks)\r\n\r\n    console.log(\"album page\", album)\r\n\r\n    useEffect(() => {\r\n        dispatch(getAlbum({id}))\r\n    }, [id])\r\n\r\n    const playTrack = useCallback((trackId: string) => {\r\n        dispatch(getTrack({trackId}))\r\n    }, [])\r\n\r\n\r\n    return (\r\n        <>\r\n            {\r\n                (id === album?.id)\r\n                    ? <Album album={album}\r\n                             containsMySavedTracks={containsMySavedTracks}\r\n                             playTrack={playTrack}/>\r\n                    : <div style={{color: \"white\"}}>Loading</div>\r\n            }\r\n        </>\r\n    );\r\n};\r\n\r\nexport default AlbumContainer;\r\n","C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\pages\\main\\playlist\\PlaylistContainer.tsx",["223","224"],"import React, {useEffect} from 'react';\r\nimport Album from \"../album/Album\";\r\nimport Playlist from \"./Playlist\";\r\nimport {useParams} from \"react-router-dom\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppRootStateType} from \"../../../store/store\";\r\nimport {getPlaylist} from \"../../../store/playlist-reducer\";\r\n\r\nconst PlaylistContainer = () => {\r\n\r\n    let {id} = useParams<{id: string}>()\r\n\r\n    const dispatch = useDispatch()\r\n    const playlist = useSelector<AppRootStateType, SpotifyApi.SinglePlaylistResponse | null>(state => state.playlist.playlist)\r\n\r\n    console.log(\"playlist page\", playlist)\r\n\r\n    useEffect(() => {\r\n        dispatch(getPlaylist({id}))\r\n    }, [id])\r\n\r\n\r\n    return (\r\n        <>\r\n            {\r\n                (id === playlist?.id)\r\n                    ? <Playlist playlist={playlist}/>\r\n                    : <div style={{color: \"white\"}}>Loading</div>\r\n            }\r\n        </>\r\n    );\r\n};\r\n\r\nexport default PlaylistContainer;\r\n","C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\pages\\main\\home\\HomeContainer.tsx",["225"],"import React, {useEffect} from 'react';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppRootStateType} from \"../../../store/store\";\r\nimport {getFeaturedPlaylists, getNewReleases} from \"../../../store/home-reducer\";\r\nimport Home from \"./Home\";\r\n\r\nconst HomeContainer = () => {\r\n\r\n    const dispatch = useDispatch()\r\n    const featuredPlaylists = useSelector<AppRootStateType, SpotifyApi.PlaylistObjectSimplified[]>(state => state.home.featuredPlaylists)\r\n    const newReleases = useSelector<AppRootStateType, SpotifyApi.AlbumObjectSimplified[]>(state => state.home.newReleases)\r\n    const isLoading = useSelector<AppRootStateType, boolean>(state => state.home.isLoading)\r\n\r\n    useEffect(() => {\r\n        if (!featuredPlaylists.length || !newReleases.length) {\r\n            dispatch(getFeaturedPlaylists())\r\n            dispatch(getNewReleases())\r\n        }\r\n    }, [])\r\n\r\n\r\n\r\n    return (\r\n            <Home featuredPlaylists={featuredPlaylists}\r\n                  newReleases={newReleases}\r\n                  isLoading={isLoading} />\r\n    );\r\n};\r\n\r\nexport default HomeContainer;\r\n","C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\components\\common\\Table\\Table.tsx",[],"C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\components\\common\\button\\Button.tsx",[],"C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\components\\artist\\popularTracks\\PopularTracks.tsx",["226","227"],"import React, {useCallback, useMemo, useState} from 'react';\r\nimport Table, {ITableModel} from \"../../common/Table/Table\";\r\nimport {convertToMMSS} from \"../../../helpers/helpers\";\r\nimport {getTrack} from \"../../../store/player-reducer\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {Button} from \"../../common/button/Button\";\r\nimport classes from \"./PopularTracks.module.scss\";\r\n\r\ntype PropsType = {\r\n    tracks: SpotifyApi.TrackObjectFull[]\r\n    containsMySavedTracks: boolean[]\r\n}\r\n\r\n\r\nconst PopularTracks: React.FC<PropsType> = ({tracks, containsMySavedTracks}) => {\r\n\r\n    const [toggle, setToggle] = useState(false)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const playTrack = useCallback((trackId: string) => {\r\n        dispatch(getTrack({trackId}))\r\n    }, [])\r\n\r\n    const testModel: ITableModel[] = useMemo(() => ([\r\n        {\r\n            title: (i) => (<th key={i}></th>),\r\n            render: (d: SpotifyApi.TrackObjectFull, i) => (\r\n                <td style={{width: \"10%\"}} key={i}>\r\n                    <button onClick={() => playTrack(d.id)}>Play</button>\r\n                </td>)\r\n        },\r\n        {\r\n            title: (i) => (<th key={i}></th>),\r\n            render: (d: SpotifyApi.TrackObjectFull, i, dataIndex, contains) => (\r\n                <td style={{width: \"5%\"}} key={i}>\r\n                    <div style={{whiteSpace: \"pre-wrap\"}}>\r\n                        {dataIndex+1}\r\n                        <div>{contains ? \"yes\" : \"no\"}</div>\r\n                    </div>\r\n                </td>)\r\n        },\r\n        {\r\n            title: (i) => (<th key={i}></th>),\r\n            render: (d: SpotifyApi.TrackObjectFull, i) => (\r\n                <td style={{width: \"60%\"}} key={i}>\r\n                    <div style={{whiteSpace: \"pre-wrap\"}}>\r\n                        {d.name}\r\n                    </div>\r\n                </td>)\r\n        },\r\n        {\r\n            title: (i) => (<th key={i}></th>),\r\n            render: (d: SpotifyApi.TrackObjectFull, i) => (\r\n                <td style={{width: \"30%\"}} key={i}>\r\n                    <div style={{whiteSpace: \"pre-wrap\"}}>\r\n                        {convertToMMSS(d.duration_ms / 1000)}\r\n                    </div>\r\n                </td>)\r\n        },\r\n\r\n    ]), [])\r\n\r\n    return (\r\n        <div className={classes.popularTracks}>\r\n            <h3 className={classes.title}>Popular</h3>\r\n\r\n            <div className={classes.table}>\r\n                <Table\r\n                    model={testModel}\r\n                    contains={containsMySavedTracks}\r\n                    data={toggle ? tracks : tracks?.slice(0, 5)}/>\r\n            </div>\r\n            <Button onClick={() => setToggle(!toggle)}>\r\n                {toggle ? `Show 5 less` : `Show 5 more`}\r\n            </Button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default PopularTracks;\r\n","C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\components\\tracklistHeader\\TracklistHeader.tsx",[],"C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\components\\common\\image\\Image.tsx",["228"],"import React, {useState} from 'react';\r\n\r\n\r\ninterface PropsType extends  React.DetailedHTMLProps<React.ImgHTMLAttributes<HTMLImageElement>, HTMLImageElement>{\r\n\r\n}\r\n\r\nconst Image: React.FC<PropsType> = React.memo((props) => {\r\n\r\n    let [imageLoaded, setImageLoaded] = useState(false)\r\n\r\n    return (\r\n        <img {...props} onLoad={() => setImageLoaded(true)}\r\n            style={{\r\n                opacity: imageLoaded ? 1 : 0,\r\n                transition: \"all .3s ease-out\"\r\n            }}\r\n        />\r\n\r\n    );\r\n})\r\n\r\nexport default Image;\r\n","C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\pages\\main\\yourLibrary\\myTopArtists\\myTopArtists.tsx",["229"],"import React, {useEffect} from 'react';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppRootStateType} from \"../../../../store/store\";\r\nimport {getMyTopArtists} from \"../../../../store/myLibrary-reducer\";\r\nimport ArtistCard from '../../../../components/common/artistCard/ArtistCard';\r\n\r\nconst MyTopArtists = () => {\r\n\r\n    const dispatch = useDispatch()\r\n    const myTopArtists = useSelector<AppRootStateType, SpotifyApi.ArtistObjectFull[]>(state => state.myLibrary.myTopArtists)\r\n\r\n    useEffect(() => {\r\n        dispatch(getMyTopArtists())\r\n    }, [])\r\n\r\n\r\n    return (\r\n        <div>\r\n            {myTopArtists.map(artist => (\r\n                <ArtistCard\r\n                    imageUrl={artist.images[0].url}\r\n                    link={artist.id}\r\n                    name={artist.name}\r\n                />\r\n                ))}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default MyTopArtists;\r\n",["230","231"],"C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\components\\common\\artistCard\\ArtistCard.tsx",[],"C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\pages\\main\\yourLibrary\\myTopArtists\\MyTopArtists.tsx",["232"],"import React, {useEffect} from 'react';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppRootStateType} from \"../../../../store/store\";\r\nimport {getMyTopArtists} from \"../../../../store/myLibrary-reducer\";\r\nimport ArtistCard from '../../../../components/common/artistCard/ArtistCard';\r\nimport classes from \"./MyTopArtists.module.scss\";\r\n\r\nconst MyTopArtists = () => {\r\n\r\n    const dispatch = useDispatch()\r\n    const myTopArtists = useSelector<AppRootStateType, SpotifyApi.ArtistObjectFull[]>(state => state.myLibrary.myTopArtists)\r\n\r\n    useEffect(() => {\r\n        dispatch(getMyTopArtists())\r\n    }, [])\r\n\r\n\r\n    return (\r\n        <div className={classes.myTopArtists}>\r\n            <h1 className={classes.title}>Artists</h1>\r\n            <div className={classes.artistsCards}>\r\n                {myTopArtists.map(artist => (\r\n                    <ArtistCard\r\n                        imageUrl={artist.images[1].url}\r\n                        link={artist.id}\r\n                        name={artist.name}\r\n                    />\r\n                ))}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default MyTopArtists;\r\n",{"ruleId":"233","replacedBy":"234"},{"ruleId":"235","replacedBy":"236"},{"ruleId":"237","severity":1,"message":"238","line":14,"column":24,"nodeType":"239","messageId":"240","endLine":14,"endColumn":26},{"ruleId":"241","severity":1,"message":"242","line":21,"column":7,"nodeType":"243","endLine":21,"endColumn":9,"suggestions":"244"},{"ruleId":"241","severity":1,"message":"245","line":59,"column":9,"nodeType":"243","endLine":59,"endColumn":11,"suggestions":"246"},{"ruleId":"241","severity":1,"message":"242","line":17,"column":8,"nodeType":"243","endLine":17,"endColumn":10,"suggestions":"247"},{"ruleId":"241","severity":1,"message":"242","line":15,"column":8,"nodeType":"243","endLine":15,"endColumn":10,"suggestions":"248"},{"ruleId":"241","severity":1,"message":"249","line":76,"column":9,"nodeType":"243","endLine":76,"endColumn":11,"suggestions":"250"},{"ruleId":"233","replacedBy":"251"},{"ruleId":"235","replacedBy":"252"},{"ruleId":"241","severity":1,"message":"242","line":25,"column":8,"nodeType":"243","endLine":25,"endColumn":12,"suggestions":"253"},{"ruleId":"241","severity":1,"message":"242","line":21,"column":8,"nodeType":"243","endLine":21,"endColumn":12,"suggestions":"254"},{"ruleId":"241","severity":1,"message":"255","line":25,"column":8,"nodeType":"243","endLine":25,"endColumn":10,"suggestions":"256"},{"ruleId":"257","severity":1,"message":"258","line":2,"column":8,"nodeType":"259","messageId":"260","endLine":2,"endColumn":13},{"ruleId":"241","severity":1,"message":"242","line":20,"column":8,"nodeType":"243","endLine":20,"endColumn":12,"suggestions":"261"},{"ruleId":"241","severity":1,"message":"262","line":19,"column":8,"nodeType":"243","endLine":19,"endColumn":10,"suggestions":"263"},{"ruleId":"241","severity":1,"message":"255","line":23,"column":8,"nodeType":"243","endLine":23,"endColumn":10,"suggestions":"264"},{"ruleId":"241","severity":1,"message":"249","line":62,"column":9,"nodeType":"243","endLine":62,"endColumn":11,"suggestions":"265"},{"ruleId":"266","severity":1,"message":"267","line":13,"column":9,"nodeType":"268","endLine":18,"endColumn":11},{"ruleId":"241","severity":1,"message":"242","line":14,"column":8,"nodeType":"243","endLine":14,"endColumn":10,"suggestions":"269"},{"ruleId":"233","replacedBy":"270"},{"ruleId":"235","replacedBy":"271"},{"ruleId":"241","severity":1,"message":"242","line":15,"column":8,"nodeType":"243","endLine":15,"endColumn":10,"suggestions":"272"},"no-native-reassign",["273"],"no-negated-in-lhs",["274"],"no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["275"],"React Hook useMemo has a missing dependency: 'playTrack'. Either include it or remove the dependency array. If 'playTrack' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["276"],["277"],["278"],"React Hook useMemo has a missing dependency: 'playTrack'. Either include it or remove the dependency array.",["279"],["273"],["274"],["280"],["281"],"React Hook useCallback has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["282"],"@typescript-eslint/no-unused-vars","'Album' is defined but never used.","Identifier","unusedVar",["283"],"React Hook useEffect has missing dependencies: 'dispatch', 'featuredPlaylists.length', and 'newReleases.length'. Either include them or remove the dependency array.",["284"],["285"],["286"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["287"],["273"],["274"],["288"],"no-global-assign","no-unsafe-negation",{"desc":"289","fix":"290"},{"desc":"291","fix":"292"},{"desc":"289","fix":"293"},{"desc":"289","fix":"294"},{"desc":"291","fix":"295"},{"desc":"296","fix":"297"},{"desc":"296","fix":"298"},{"desc":"289","fix":"299"},{"desc":"296","fix":"300"},{"desc":"301","fix":"302"},{"desc":"289","fix":"303"},{"desc":"291","fix":"304"},{"desc":"289","fix":"305"},{"desc":"289","fix":"306"},"Update the dependencies array to be: [dispatch]",{"range":"307","text":"308"},"Update the dependencies array to be: [playTrack]",{"range":"309","text":"310"},{"range":"311","text":"308"},{"range":"312","text":"308"},{"range":"313","text":"310"},"Update the dependencies array to be: [dispatch, id]",{"range":"314","text":"315"},{"range":"316","text":"315"},{"range":"317","text":"308"},{"range":"318","text":"315"},"Update the dependencies array to be: [dispatch, featuredPlaylists.length, newReleases.length]",{"range":"319","text":"320"},{"range":"321","text":"308"},{"range":"322","text":"310"},{"range":"323","text":"308"},{"range":"324","text":"308"},[814,816],"[dispatch]",[2220,2222],"[playTrack]",[673,675],[624,626],[2917,2919],[1158,1162],"[dispatch, id]",[813,817],[926,928],[694,698],[884,886],"[dispatch, featuredPlaylists.length, newReleases.length]",[771,773],[2236,2238],[569,571],[620,622]]