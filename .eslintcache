[{"C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\index.tsx":"1","C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\reportWebVitals.ts":"2","C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\store\\store.ts":"3","C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\App.tsx":"4","C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\store\\app-reducer.ts":"5","C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\store\\home-reducer.ts":"6","C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\store\\myLibrary-reducer.ts":"7","C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\store\\player-reducer.ts":"8","C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\store\\album-reducer.ts":"9","C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\store\\playlist-reducer.ts":"10","C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\pages\\login\\Login.tsx":"11","C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\pages\\main\\Main.tsx":"12","C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\api\\spotify-web-api.ts":"13","C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\api\\api.ts":"14","C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\pages\\main\\home\\Home.tsx":"15","C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\pages\\main\\playlist\\Playlist.tsx":"16","C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\pages\\main\\album\\Album.tsx":"17","C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\pages\\main\\yourLibrary\\recentlyPlayed\\RecentlyPlayed.tsx":"18","C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\pages\\main\\yourLibrary\\LikedTracks\\LikedTracks.tsx":"19","C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\components\\layout\\Layout.tsx":"20","C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\helpers\\helpers.ts":"21","C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\components\\layout\\Header.tsx":"22","C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\components\\layout\\Nav.tsx":"23","C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\components\\layout\\player\\Player.tsx":"24","C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\components\\common\\playlistCard\\PlaylistCard.tsx":"25","C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\components\\common\\tracklist\\Tracklist.tsx":"26","C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\components\\layout\\appNav\\AppNav.tsx":"27","C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\components\\layout\\myLibraryNav\\MyLibraryNav.tsx":"28","C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\components\\layout\\player\\currentTrack\\CurrentTrack.tsx":"29","C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\store\\artist-reducer.ts":"30","C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\pages\\main\\artist\\Artist.tsx":"31","C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\components\\common\\artistsLinks\\ArtistsLinks.tsx":"32","C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\components\\common\\cards\\Cards.tsx":"33","C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\components\\common\\card\\Card.tsx":"34","C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\components\\common\\albumCard\\AlbumCard.tsx":"35","C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\components\\common\\card\\CardSkeleton.tsx":"36","C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\pages\\main\\artist\\ArtistContainer.tsx":"37","C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\pages\\main\\album\\AlbumContainer.tsx":"38","C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\pages\\main\\playlist\\PlaylistContainer.tsx":"39","C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\pages\\main\\home\\HomeContainer.tsx":"40","C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\components\\common\\Table\\Table.tsx":"41","C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\components\\common\\button\\Button.tsx":"42","C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\components\\artist\\popularTracks\\PopularTracks.tsx":"43","C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\components\\tracklistHeader\\TracklistHeader.tsx":"44","C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\components\\common\\image\\Image.tsx":"45","C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\pages\\main\\yourLibrary\\myTopArtists\\myTopArtists.tsx":"46","C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\components\\common\\artistCard\\ArtistCard.tsx":"47","C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\pages\\main\\yourLibrary\\myTopArtists\\MyTopArtists.tsx":"48"},{"size":912,"mtime":1610633256770,"results":"49","hashOfConfig":"50"},{"size":425,"mtime":1607317929848,"results":"51","hashOfConfig":"50"},{"size":846,"mtime":1610615971852,"results":"52","hashOfConfig":"50"},{"size":1107,"mtime":1610529283982,"results":"53","hashOfConfig":"50"},{"size":768,"mtime":1610608960159,"results":"54","hashOfConfig":"50"},{"size":1991,"mtime":1611077859292,"results":"55","hashOfConfig":"50"},{"size":1606,"mtime":1611824351238,"results":"56","hashOfConfig":"50"},{"size":783,"mtime":1610611781454,"results":"57","hashOfConfig":"50"},{"size":705,"mtime":1610611966224,"results":"58","hashOfConfig":"50"},{"size":752,"mtime":1610611781449,"results":"59","hashOfConfig":"50"},{"size":793,"mtime":1610115202790,"results":"60","hashOfConfig":"50"},{"size":1476,"mtime":1611826434007,"results":"61","hashOfConfig":"50"},{"size":454,"mtime":1610615330765,"results":"62","hashOfConfig":"50"},{"size":1643,"mtime":1610271477229,"results":"63","hashOfConfig":"50"},{"size":1059,"mtime":1611484691453,"results":"64","hashOfConfig":"50"},{"size":878,"mtime":1611823546635,"results":"65","hashOfConfig":"50"},{"size":2640,"mtime":1611823321426,"results":"66","hashOfConfig":"50"},{"size":865,"mtime":1610541119727,"results":"67","hashOfConfig":"50"},{"size":800,"mtime":1610541033798,"results":"68","hashOfConfig":"50"},{"size":488,"mtime":1610360476342,"results":"69","hashOfConfig":"50"},{"size":233,"mtime":1610527828587,"results":"70","hashOfConfig":"50"},{"size":777,"mtime":1610207924939,"results":"71","hashOfConfig":"50"},{"size":418,"mtime":1610201734089,"results":"72","hashOfConfig":"50"},{"size":4735,"mtime":1611061055401,"results":"73","hashOfConfig":"50"},{"size":496,"mtime":1611828811835,"results":"74","hashOfConfig":"50"},{"size":2990,"mtime":1611506099022,"results":"75","hashOfConfig":"50"},{"size":1129,"mtime":1610257856100,"results":"76","hashOfConfig":"50"},{"size":987,"mtime":1610207018817,"results":"77","hashOfConfig":"50"},{"size":930,"mtime":1610622933359,"results":"78","hashOfConfig":"50"},{"size":1331,"mtime":1611051995995,"results":"79","hashOfConfig":"50"},{"size":2269,"mtime":1611828383681,"results":"80","hashOfConfig":"50"},{"size":632,"mtime":1610622933351,"results":"81","hashOfConfig":"50"},{"size":992,"mtime":1611676392843,"results":"82","hashOfConfig":"50"},{"size":867,"mtime":1611828566634,"results":"83","hashOfConfig":"50"},{"size":587,"mtime":1611828811848,"results":"84","hashOfConfig":"50"},{"size":438,"mtime":1611066696528,"results":"85","hashOfConfig":"50"},{"size":1609,"mtime":1611481360990,"results":"86","hashOfConfig":"50"},{"size":1101,"mtime":1611482824250,"results":"87","hashOfConfig":"50"},{"size":984,"mtime":1611484386166,"results":"88","hashOfConfig":"50"},{"size":1100,"mtime":1611484691461,"results":"89","hashOfConfig":"50"},{"size":1079,"mtime":1611507608226,"results":"90","hashOfConfig":"50"},{"size":495,"mtime":1611657297282,"results":"91","hashOfConfig":"50"},{"size":2698,"mtime":1611661994512,"results":"92","hashOfConfig":"50"},{"size":1528,"mtime":1611828383689,"results":"93","hashOfConfig":"50"},{"size":547,"mtime":1611830872729,"results":"94","hashOfConfig":"50"},{"size":911,"mtime":1611825628921,"results":"95","hashOfConfig":"50"},{"size":747,"mtime":1611830900673,"results":"96","hashOfConfig":"50"},{"size":1147,"mtime":1611830963442,"results":"97","hashOfConfig":"50"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},"1vm27yo",{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"100"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"100"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"100"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"100"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"100"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"154","messages":"155","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"156","usedDeprecatedRules":"100"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"165","usedDeprecatedRules":"100"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"180","usedDeprecatedRules":"100"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"183","usedDeprecatedRules":"100"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"186","usedDeprecatedRules":"100"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"189","usedDeprecatedRules":"100"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"196","usedDeprecatedRules":"100"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"201","messages":"202","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"203","usedDeprecatedRules":"204"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"207","messages":"208","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\index.tsx",[],["209","210"],"C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\reportWebVitals.ts",[],"C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\store\\store.ts",[],"C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\App.tsx",[],"C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\store\\app-reducer.ts",[],"C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\store\\home-reducer.ts",[],"C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\store\\myLibrary-reducer.ts",[],"C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\store\\player-reducer.ts",[],"C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\store\\album-reducer.ts",["211"],"import {createAsyncThunk, createSlice, PayloadAction} from \"@reduxjs/toolkit\";\r\nimport {spotifyWebApi} from \"../api/spotify-web-api\";\r\n\r\nconst initialState = {\r\n    album: null as SpotifyApi.SingleAlbumResponse | null,\r\n}\r\n\r\nexport const getAlbum = createAsyncThunk\r\n(\"getAlbum\", async ({id}: {id: string}, thunkAPI) => {\r\n    let result = await spotifyWebApi.getAlbum(id)\r\n    return result.body\r\n})\r\n\r\nexport const albumSlice = createSlice({\r\n    name: \"album\",\r\n    initialState: initialState,\r\n    reducers: {},\r\n    extraReducers: builder => (\r\n        builder\r\n            .addCase(getAlbum.fulfilled, (state, action) => {\r\n                state.album = action.payload\r\n            })\r\n    )\r\n})\r\n\r\n","C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\store\\playlist-reducer.ts",[],"C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\pages\\login\\Login.tsx",[],"C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\pages\\main\\Main.tsx",["212","213"],"import React, {useEffect} from 'react';\r\nimport {useDispatch} from \"react-redux\";\r\nimport { getMyInfo } from '../../store/home-reducer';\r\nimport Layout from \"../../components/layout/Layout\";\r\nimport {Route, Switch } from 'react-router-dom';\r\nimport RecentlyPlayed from \"./yourLibrary/recentlyPlayed/RecentlyPlayed\";\r\nimport LikedTracks from \"./yourLibrary/LikedTracks/LikedTracks\";\r\nimport ArtistContainer from \"./artist/ArtistContainer\";\r\nimport AlbumContainer from \"./album/AlbumContainer\";\r\nimport PlaylistContainer from \"./playlist/PlaylistContainer\";\r\nimport HomeContainer from \"./home/HomeContainer\";\r\nimport MyTopArtists from \"./yourLibrary/myTopArtists/MyTopArtists\";\r\n\r\nconst Main:React.FC = ({}) => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n\r\n    useEffect(() => {\r\n        dispatch(getMyInfo())\r\n    },[])\r\n\r\n\r\n\r\n    return (\r\n        <Layout>\r\n            <Switch>\r\n                <Route path={\"/\"} exact component={HomeContainer}/>\r\n                <Route path={\"/album/:id\"} component={AlbumContainer}/>\r\n                <Route path={\"/playlist/:id\"} component={PlaylistContainer}/>\r\n                <Route path={\"/artist/:id\"} component={ArtistContainer}/>\r\n                <Route path={\"/recently-played\"} component={RecentlyPlayed} />\r\n                <Route path={\"/liked-songs\"} component={LikedTracks} />\r\n                <Route path={\"/artists\"} component={MyTopArtists} />\r\n            </Switch>\r\n        </Layout>\r\n    );\r\n};\r\n\r\nexport default Main;\r\n","C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\api\\spotify-web-api.ts",[],"C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\api\\api.ts",[],"C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\pages\\main\\home\\Home.tsx",[],"C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\pages\\main\\playlist\\Playlist.tsx",[],"C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\pages\\main\\album\\Album.tsx",["214"],"import React, {useMemo} from 'react';\r\n\r\nimport Table, {ITableModel} from \"../../../components/common/Table/Table\";\r\nimport {convertToMMSS} from \"../../../helpers/helpers\";\r\nimport ArtistsLinks from \"../../../components/common/artistsLinks/ArtistsLinks\";\r\nimport TracklistHeader from \"../../../components/tracklistHeader/TracklistHeader\";\r\n\r\n\r\ntype PropsType = {\r\n    playTrack: (trackId: string) => void\r\n    album: SpotifyApi.SingleAlbumResponse\r\n}\r\n\r\n\r\nconst Album: React.FC<PropsType> = ({playTrack, album}) => {\r\n\r\n    const testModel: ITableModel[] = useMemo(() => ([\r\n        {\r\n            title: (i: number) => (\r\n                <th style={{width: \"10%\"}} key={i}>\r\n                    <span>preview</span>\r\n                </th>),\r\n            render: (d: SpotifyApi.TrackObjectSimplified, i: number) => (\r\n                <td style={{width: \"10%\"}} key={i}>\r\n                    <button onClick={() => playTrack(d.id)}>Play</button>\r\n                </td>)\r\n        },\r\n        {\r\n            title: (i: number) => (\r\n                <th style={{width: \"30%\"}} key={i}>\r\n                    <span>Name</span>\r\n                </th>),\r\n            render: (d: SpotifyApi.TrackObjectSimplified, i: number) => (\r\n                <td style={{width: \"30%\"}} key={i}>\r\n                    <div style={{whiteSpace: \"pre-wrap\"}}>{d.name}</div>\r\n                </td>)\r\n        },\r\n        {\r\n            title: (i: number) => (\r\n                <th style={{width: \"30%\"}} key={i}>\r\n                    <span>Artist</span>\r\n                </th>),\r\n            render: (d: SpotifyApi.TrackObjectSimplified, i: number) => (\r\n                <td style={{width: \"30%\"}} key={i}>\r\n                    <ArtistsLinks artists={d.artists} />\r\n                </td>)\r\n        },\r\n        {\r\n            title: (i: number) => (\r\n                <th style={{width: \"10%\"}} key={i}>\r\n                    <span>Duration</span>\r\n                </th>),\r\n            render: (d: SpotifyApi.TrackObjectSimplified, i: number) => (\r\n                <td style={{width: \"10%\"}} key={i}>\r\n                    <div style={{whiteSpace: \"pre-wrap\"}}>{convertToMMSS(d.duration_ms / 1000)}</div>\r\n                </td>)\r\n        },\r\n\r\n    ]), [])\r\n\r\n    return (\r\n        <div>\r\n            <TracklistHeader imageUrl={album.images[0].url}\r\n                             type={album.type}\r\n                             name={album.name}>\r\n                <ArtistsLinks artists={album.artists} />\r\n            </TracklistHeader>\r\n            <Table model={testModel} data={album.tracks.items} disabled={false}/>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Album;\r\n","C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\pages\\main\\yourLibrary\\recentlyPlayed\\RecentlyPlayed.tsx",["215"],"import React, {useEffect} from 'react';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppRootStateType} from \"../../../../store/store\";\r\nimport Tracklist from \"../../../../components/common/tracklist/Tracklist\";\r\nimport { getMyRecentlyPlayedTracks } from '../../../../store/myLibrary-reducer';\r\nimport classes from \"./RecentlyPlayed.module.scss\";\r\n\r\n\r\nconst RecentlyPlayed = () => {\r\n\r\n    const dispatch = useDispatch()\r\n    const myRecentlyPlayedTracks = useSelector<AppRootStateType, Array<SpotifyApi.PlayHistoryObject>>(state => state.myLibrary.myRecentlyPlayedTracks)\r\n\r\n\r\n    useEffect(() => {\r\n        dispatch(getMyRecentlyPlayedTracks())\r\n    }, [])\r\n\r\n    return (\r\n        <div className={classes.recentlyPlayed}>\r\n            <Tracklist tracks={myRecentlyPlayedTracks} />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default RecentlyPlayed;\r\n","C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\pages\\main\\yourLibrary\\LikedTracks\\LikedTracks.tsx",["216"],"import React, {useEffect} from 'react';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppRootStateType} from \"../../../../store/store\";\r\nimport Tracklist from \"../../../../components/common/tracklist/Tracklist\";\r\nimport {getMySavedTracks} from '../../../../store/myLibrary-reducer';\r\nimport classes from './LikedTracks.module.scss';\r\n\r\nconst LikedTracks = () => {\r\n\r\n    const dispatch = useDispatch()\r\n    const mySavedTracks = useSelector<AppRootStateType, Array<SpotifyApi.SavedTrackObject>>(state => state.myLibrary.mySavedTracks)\r\n\r\n    useEffect(() => {\r\n        dispatch(getMySavedTracks())\r\n    }, [])\r\n\r\n    return (\r\n        <div className={classes.likedTracks}>\r\n            <Tracklist tracks={mySavedTracks}/>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default LikedTracks;\r\n","C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\components\\layout\\Layout.tsx",[],"C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\helpers\\helpers.ts",[],"C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\components\\layout\\Header.tsx",[],"C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\components\\layout\\Nav.tsx",[],"C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\components\\layout\\player\\Player.tsx",[],"C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\components\\common\\playlistCard\\PlaylistCard.tsx",[],"C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\components\\common\\tracklist\\Tracklist.tsx",["217"],"import React, {useMemo} from 'react';\r\nimport Table, {ITableModel} from \"../Table/Table\";\r\nimport {convertToMMSS} from \"../../../helpers/helpers\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {getTrack} from \"../../../store/player-reducer\";\r\nimport ArtistsLinks from \"../artistsLinks/ArtistsLinks\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\ntype PropsType = {\r\n    tracks: Array<SpotifyApi.SavedTrackObject | SpotifyApi.PlayHistoryObject>\r\n}\r\n\r\nconst Tracklist: React.FC<PropsType> = ({tracks}) => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const playTrack = (trackId: string) => {\r\n        dispatch(getTrack({trackId}))\r\n    }\r\n    console.log(\"tracklist\", tracks)\r\n\r\n    const testModel: ITableModel[] = useMemo(() => ([\r\n        {\r\n            title: (i: number) => (\r\n                <th style={{width: \"10%\"}} key={i}>\r\n                    <span>preview</span>\r\n                </th>),\r\n            render: (d: SpotifyApi.SavedTrackObject, i: number) => (\r\n                <td style={{width: \"10%\"}} key={i}>\r\n                    <button onClick={() => playTrack(d.track.id)}>Play</button>\r\n                </td>)\r\n        },\r\n        {\r\n            title: (i: number) => (\r\n                <th style={{width: \"30%\"}} key={i}>\r\n                    <span>Name</span>\r\n                </th>),\r\n            render: (d: SpotifyApi.SavedTrackObject, i: number) => (\r\n                <td style={{width: \"30%\"}} key={i}>\r\n                    <div style={{whiteSpace: \"pre-wrap\"}}>{d.track.name}</div>\r\n                </td>)\r\n        },\r\n        {\r\n            title: (i: number) => (\r\n                <th style={{width: \"30%\"}} key={i}>\r\n                    <span>Artist</span>\r\n                </th>),\r\n            render: (d: SpotifyApi.SavedTrackObject, i: number) => (\r\n                <td style={{width: \"30%\"}} key={i}>\r\n                    <ArtistsLinks artists={d.track.artists}/>\r\n                </td>)\r\n        },\r\n        {\r\n            title: (i: number) => (\r\n                <th style={{width: \"30%\"}} key={i}>\r\n                    <span>Album</span>\r\n                </th>),\r\n            render: (d: SpotifyApi.SavedTrackObject, i: number) => (\r\n                <td style={{width: \"30%\"}} key={i}>\r\n                    <Link to={{pathname: `/album/${d.track.album.id}`}} style={{whiteSpace: \"pre-wrap\", color: \"inherit\"}}>{d.track.album.name}</Link>\r\n                </td>)\r\n        },\r\n        {\r\n            title: (i: number) => (\r\n                <th style={{width: \"10%\"}} key={i}>\r\n                    <span>Duration</span>\r\n                </th>),\r\n            render: (d: SpotifyApi.SavedTrackObject, i: number) => (\r\n                <td style={{width: \"30%\"}} key={i}>\r\n                    <div style={{whiteSpace: \"pre-wrap\"}}>{convertToMMSS(d.track.duration_ms / 1000)}</div>\r\n                </td>)\r\n        },\r\n\r\n    ]), [])\r\n\r\n\r\n    return (\r\n        <Table model={testModel} data={tracks} disabled={false}/>\r\n    );\r\n};\r\n\r\nexport default Tracklist;\r\n","C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\components\\layout\\appNav\\AppNav.tsx",[],"C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\components\\layout\\myLibraryNav\\MyLibraryNav.tsx",[],"C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\components\\layout\\player\\currentTrack\\CurrentTrack.tsx",[],"C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\store\\artist-reducer.ts",["218"],"import {createAsyncThunk, createSlice, PayloadAction} from \"@reduxjs/toolkit\";\r\nimport {spotifyWebApi} from \"../api/spotify-web-api\";\r\n\r\nconst initialState = {\r\n    artist: null as SpotifyApi.SingleArtistResponse | null,\r\n    popularTracks: [] as SpotifyApi.TrackObjectFull[],\r\n    albums: [] as  SpotifyApi.AlbumObjectSimplified[],\r\n    relatedArtists: [] as  SpotifyApi.ArtistObjectFull[]\r\n}\r\n\r\nexport const getArtist = createAsyncThunk\r\n(\"getArtist\", async ({id}: {id: string}, thunkAPI) => {\r\n    let [artist, popular, albums, relatedArtists] = await Promise\r\n        .all([\r\n            spotifyWebApi.getArtist(id),\r\n            spotifyWebApi.getArtistTopTracks(id, \"RU\"),\r\n            spotifyWebApi.getArtistAlbums(id),\r\n            spotifyWebApi.getArtistRelatedArtists(id)\r\n        ])\r\n    console.log(artist, popular)\r\n    return {\r\n        artist: artist.body,\r\n        popularTracks: popular.body.tracks,\r\n        albums: albums.body.items,\r\n        relatedArtists: relatedArtists.body.artists\r\n    }\r\n})\r\n\r\nexport const artistSlice = createSlice({\r\n    name: \"artist\",\r\n    initialState: initialState,\r\n    reducers: {},\r\n    extraReducers: builder => (\r\n        builder\r\n            .addCase(getArtist.fulfilled, (state, action) => {\r\n                Object.assign(state, action.payload)\r\n            })\r\n    )\r\n})\r\n\r\n","C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\pages\\main\\artist\\Artist.tsx",[],"C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\components\\common\\artistsLinks\\ArtistsLinks.tsx",[],"C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\components\\common\\cards\\Cards.tsx",[],"C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\components\\common\\card\\Card.tsx",[],"C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\components\\common\\albumCard\\AlbumCard.tsx",[],"C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\components\\common\\card\\CardSkeleton.tsx",[],"C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\pages\\main\\artist\\ArtistContainer.tsx",["219"],"import React, {useEffect} from 'react';\r\nimport Artist from \"./Artist\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {useParams} from \"react-router-dom\";\r\nimport {AppRootStateType} from \"../../../store/store\";\r\nimport {getArtist} from \"../../../store/artist-reducer\";\r\n\r\nconst ArtistContainer = () => {\r\n\r\n    const dispatch = useDispatch()\r\n    let {id} = useParams<{ id: string }>()\r\n\r\n    const artist = useSelector<AppRootStateType, SpotifyApi.SingleArtistResponse | null>(state => state.artist.artist)\r\n    const popularTracks = useSelector<AppRootStateType, SpotifyApi.TrackObjectFull[]>(state => state.artist.popularTracks)\r\n    const albums = useSelector<AppRootStateType, SpotifyApi.AlbumObjectSimplified[]>(state => state.artist.albums)\r\n    const relatedArtists = useSelector<AppRootStateType, SpotifyApi.ArtistObjectFull[]>(state => state.artist.relatedArtists)\r\n\r\n    console.log(\"artist\", artist)\r\n    console.log(\"artist popular tracks \", popularTracks)\r\n    console.log(\"artist albums \", albums)\r\n    console.log(\"artist related artists \", relatedArtists)\r\n\r\n    useEffect(() => {\r\n        dispatch(getArtist({id}))\r\n    }, [id])\r\n\r\n\r\n    return (\r\n        <>\r\n            {\r\n                (id !== artist?.id)\r\n                    ? <div style={{color: \"white\"}}>Loading</div>\r\n                    : <Artist artist={artist}\r\n                              popularTracks={popularTracks}\r\n                              albums={albums}\r\n                              relatedArtists={relatedArtists}/>\r\n            }\r\n        </>\r\n    );\r\n};\r\n\r\nexport default ArtistContainer;\r\n","C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\pages\\main\\album\\AlbumContainer.tsx",["220","221"],"import React, {useCallback, useEffect} from 'react';\r\nimport {useParams} from \"react-router-dom\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppRootStateType} from \"../../../store/store\";\r\nimport {getAlbum} from \"../../../store/album-reducer\";\r\nimport {getTrack} from \"../../../store/player-reducer\";\r\nimport Album from \"./Album\";\r\n\r\nconst AlbumContainer = () => {\r\n\r\n    let {id} = useParams<{ id: string }>()\r\n\r\n    const dispatch = useDispatch()\r\n    const album = useSelector<AppRootStateType, SpotifyApi.SingleAlbumResponse | null>(state => state.album.album)\r\n\r\n    console.log(\"album page\", album)\r\n\r\n    useEffect(() => {\r\n        dispatch(getAlbum({id}))\r\n    }, [id])\r\n\r\n    const playTrack = useCallback((trackId: string) => {\r\n        dispatch(getTrack({trackId}))\r\n    }, [])\r\n\r\n\r\n    return (\r\n        <>\r\n            {\r\n                (id === album?.id)\r\n                    ? <Album album={album} playTrack={playTrack}/>\r\n                    : <div style={{color: \"white\"}}>Loading</div>\r\n            }\r\n        </>\r\n    );\r\n};\r\n\r\nexport default AlbumContainer;\r\n","C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\pages\\main\\playlist\\PlaylistContainer.tsx",["222","223"],"import React, {useEffect} from 'react';\r\nimport Album from \"../album/Album\";\r\nimport Playlist from \"./Playlist\";\r\nimport {useParams} from \"react-router-dom\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppRootStateType} from \"../../../store/store\";\r\nimport {getPlaylist} from \"../../../store/playlist-reducer\";\r\n\r\nconst PlaylistContainer = () => {\r\n\r\n    let {id} = useParams<{id: string}>()\r\n\r\n    const dispatch = useDispatch()\r\n    const playlist = useSelector<AppRootStateType, SpotifyApi.SinglePlaylistResponse | null>(state => state.playlist.playlist)\r\n\r\n    console.log(\"playlist page\", playlist)\r\n\r\n    useEffect(() => {\r\n        dispatch(getPlaylist({id}))\r\n    }, [id])\r\n\r\n\r\n    return (\r\n        <>\r\n            {\r\n                (id === playlist?.id)\r\n                    ? <Playlist playlist={playlist}/>\r\n                    : <div style={{color: \"white\"}}>Loading</div>\r\n            }\r\n        </>\r\n    );\r\n};\r\n\r\nexport default PlaylistContainer;\r\n","C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\pages\\main\\home\\HomeContainer.tsx",["224"],"import React, {useEffect} from 'react';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppRootStateType} from \"../../../store/store\";\r\nimport {getFeaturedPlaylists, getNewReleases} from \"../../../store/home-reducer\";\r\nimport Home from \"./Home\";\r\n\r\nconst HomeContainer = () => {\r\n\r\n    const dispatch = useDispatch()\r\n    const featuredPlaylists = useSelector<AppRootStateType, SpotifyApi.PlaylistObjectSimplified[]>(state => state.home.featuredPlaylists)\r\n    const newReleases = useSelector<AppRootStateType, SpotifyApi.AlbumObjectSimplified[]>(state => state.home.newReleases)\r\n    const isLoading = useSelector<AppRootStateType, boolean>(state => state.home.isLoading)\r\n\r\n    useEffect(() => {\r\n        if (!featuredPlaylists.length || !newReleases.length) {\r\n            dispatch(getFeaturedPlaylists())\r\n            dispatch(getNewReleases())\r\n        }\r\n    }, [])\r\n\r\n\r\n\r\n    return (\r\n            <Home featuredPlaylists={featuredPlaylists}\r\n                  newReleases={newReleases}\r\n                  isLoading={isLoading} />\r\n    );\r\n};\r\n\r\nexport default HomeContainer;\r\n","C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\components\\common\\Table\\Table.tsx",[],"C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\components\\common\\button\\Button.tsx",[],"C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\components\\artist\\popularTracks\\PopularTracks.tsx",["225","226"],"import React, {useCallback, useMemo, useState} from 'react';\r\nimport Table, {ITableModel} from \"../../common/Table/Table\";\r\nimport {convertToMMSS} from \"../../../helpers/helpers\";\r\nimport {getTrack} from \"../../../store/player-reducer\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {Button} from \"../../common/button/Button\";\r\nimport classes from \"./PopularTracks.module.scss\";\r\n\r\ntype PropsType = {\r\n    tracks: SpotifyApi.TrackObjectFull[]\r\n}\r\n\r\n\r\nconst PopularTracks: React.FC<PropsType> = ({tracks}) => {\r\n\r\n    const [toggle, setToggle] = useState(false)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const playTrack = useCallback((trackId: string) => {\r\n        dispatch(getTrack({trackId}))\r\n    }, [])\r\n\r\n    const testModel: ITableModel[] = useMemo(() => ([\r\n        {\r\n            title: (i: number) => (<th key={i}></th>),\r\n            render: (d: SpotifyApi.TrackObjectFull, i: number) => (\r\n                <td style={{width: \"10%\"}} key={i}>\r\n                    <button onClick={() => playTrack(d.id)}>Play</button>\r\n                </td>)\r\n        },\r\n        {\r\n            title: (i: number) => (<th key={i}></th>),\r\n            render: (d: SpotifyApi.TrackObjectFull, i: number, dataIndex: number) => (\r\n                <td style={{width: \"5%\"}} key={i}>\r\n                    <div style={{whiteSpace: \"pre-wrap\"}}>\r\n                        {dataIndex+1}\r\n                    </div>\r\n                </td>)\r\n        },\r\n        {\r\n            title: (i: number) => (<th key={i}></th>),\r\n            render: (d: SpotifyApi.TrackObjectFull, i: number) => (\r\n                <td style={{width: \"60%\"}} key={i}>\r\n                    <div style={{whiteSpace: \"pre-wrap\"}}>\r\n                        {d.name}\r\n                    </div>\r\n                </td>)\r\n        },\r\n        {\r\n            title: (i: number) => (<th key={i}></th>),\r\n            render: (d: SpotifyApi.TrackObjectFull, i: number) => (\r\n                <td style={{width: \"30%\"}} key={i}>\r\n                    <div style={{whiteSpace: \"pre-wrap\"}}>\r\n                        {convertToMMSS(d.duration_ms / 1000)}\r\n                    </div>\r\n                </td>)\r\n        },\r\n\r\n    ]), [])\r\n\r\n    return (\r\n        <div className={classes.popularTracks}>\r\n            <h3 className={classes.title}>Popular</h3>\r\n\r\n            <div className={classes.table}>\r\n                <Table\r\n                    model={testModel}\r\n                    data={toggle ? tracks : tracks?.slice(0, 5)}/>\r\n            </div>\r\n            <Button onClick={() => setToggle(!toggle)}>\r\n                {toggle ? `Show 5 less` : `Show 5 more`}\r\n            </Button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default PopularTracks;\r\n","C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\components\\tracklistHeader\\TracklistHeader.tsx",[],"C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\components\\common\\image\\Image.tsx",["227"],"C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\pages\\main\\yourLibrary\\myTopArtists\\myTopArtists.tsx",["228"],"import React, {useEffect} from 'react';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppRootStateType} from \"../../../../store/store\";\r\nimport {getMyTopArtists} from \"../../../../store/myLibrary-reducer\";\r\nimport ArtistCard from '../../../../components/common/artistCard/ArtistCard';\r\n\r\nconst MyTopArtists = () => {\r\n\r\n    const dispatch = useDispatch()\r\n    const myTopArtists = useSelector<AppRootStateType, SpotifyApi.ArtistObjectFull[]>(state => state.myLibrary.myTopArtists)\r\n\r\n    useEffect(() => {\r\n        dispatch(getMyTopArtists())\r\n    }, [])\r\n\r\n\r\n    return (\r\n        <div>\r\n            {myTopArtists.map(artist => (\r\n                <ArtistCard\r\n                    imageUrl={artist.images[0].url}\r\n                    link={artist.id}\r\n                    name={artist.name}\r\n                />\r\n                ))}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default MyTopArtists;\r\n",["229","230"],"C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\components\\common\\artistCard\\ArtistCard.tsx",[],"C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\pages\\main\\yourLibrary\\myTopArtists\\MyTopArtists.tsx",["231"],{"ruleId":"232","replacedBy":"233"},{"ruleId":"234","replacedBy":"235"},{"ruleId":"236","severity":1,"message":"237","line":1,"column":40,"nodeType":"238","messageId":"239","endLine":1,"endColumn":53},{"ruleId":"240","severity":1,"message":"241","line":14,"column":24,"nodeType":"242","messageId":"243","endLine":14,"endColumn":26},{"ruleId":"244","severity":1,"message":"245","line":21,"column":7,"nodeType":"246","endLine":21,"endColumn":9,"suggestions":"247"},{"ruleId":"244","severity":1,"message":"248","line":59,"column":9,"nodeType":"246","endLine":59,"endColumn":11,"suggestions":"249"},{"ruleId":"244","severity":1,"message":"245","line":17,"column":8,"nodeType":"246","endLine":17,"endColumn":10,"suggestions":"250"},{"ruleId":"244","severity":1,"message":"245","line":15,"column":8,"nodeType":"246","endLine":15,"endColumn":10,"suggestions":"251"},{"ruleId":"244","severity":1,"message":"252","line":74,"column":9,"nodeType":"246","endLine":74,"endColumn":11,"suggestions":"253"},{"ruleId":"236","severity":1,"message":"237","line":1,"column":40,"nodeType":"238","messageId":"239","endLine":1,"endColumn":53},{"ruleId":"244","severity":1,"message":"245","line":25,"column":8,"nodeType":"246","endLine":25,"endColumn":12,"suggestions":"254"},{"ruleId":"244","severity":1,"message":"245","line":20,"column":8,"nodeType":"246","endLine":20,"endColumn":12,"suggestions":"255"},{"ruleId":"244","severity":1,"message":"256","line":24,"column":8,"nodeType":"246","endLine":24,"endColumn":10,"suggestions":"257"},{"ruleId":"236","severity":1,"message":"258","line":2,"column":8,"nodeType":"238","messageId":"239","endLine":2,"endColumn":13},{"ruleId":"244","severity":1,"message":"245","line":20,"column":8,"nodeType":"246","endLine":20,"endColumn":12,"suggestions":"259"},{"ruleId":"244","severity":1,"message":"260","line":19,"column":8,"nodeType":"246","endLine":19,"endColumn":10,"suggestions":"261"},{"ruleId":"244","severity":1,"message":"256","line":22,"column":8,"nodeType":"246","endLine":22,"endColumn":10,"suggestions":"262"},{"ruleId":"244","severity":1,"message":"252","line":60,"column":9,"nodeType":"246","endLine":60,"endColumn":11,"suggestions":"263"},{"ruleId":"264","severity":1,"message":"265","line":13,"column":9,"nodeType":"266","endLine":18,"endColumn":11},{"ruleId":"244","severity":1,"message":"245","line":14,"column":8,"nodeType":"246","endLine":14,"endColumn":10,"suggestions":"267"},{"ruleId":"232","replacedBy":"268"},{"ruleId":"234","replacedBy":"269"},{"ruleId":"244","severity":1,"message":"245","line":15,"column":8,"nodeType":"246","endLine":15,"endColumn":10,"suggestions":"270"},"no-native-reassign",["271"],"no-negated-in-lhs",["272"],"@typescript-eslint/no-unused-vars","'PayloadAction' is defined but never used.","Identifier","unusedVar","no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["273"],"React Hook useMemo has a missing dependency: 'playTrack'. Either include it or remove the dependency array. If 'playTrack' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["274"],["275"],["276"],"React Hook useMemo has a missing dependency: 'playTrack'. Either include it or remove the dependency array.",["277"],["278"],["279"],"React Hook useCallback has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["280"],"'Album' is defined but never used.",["281"],"React Hook useEffect has missing dependencies: 'dispatch', 'featuredPlaylists.length', and 'newReleases.length'. Either include them or remove the dependency array.",["282"],["283"],["284"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["285"],["271"],["272"],["286"],"no-global-assign","no-unsafe-negation",{"desc":"287","fix":"288"},{"desc":"289","fix":"290"},{"desc":"287","fix":"291"},{"desc":"287","fix":"292"},{"desc":"289","fix":"293"},{"desc":"294","fix":"295"},{"desc":"294","fix":"296"},{"desc":"287","fix":"297"},{"desc":"294","fix":"298"},{"desc":"299","fix":"300"},{"desc":"287","fix":"301"},{"desc":"289","fix":"302"},{"desc":"287","fix":"303"},{"desc":"287","fix":"304"},"Update the dependencies array to be: [dispatch]",{"range":"305","text":"306"},"Update the dependencies array to be: [playTrack]",{"range":"307","text":"308"},{"range":"309","text":"306"},{"range":"310","text":"306"},{"range":"311","text":"308"},"Update the dependencies array to be: [dispatch, id]",{"range":"312","text":"313"},{"range":"314","text":"313"},{"range":"315","text":"306"},{"range":"316","text":"313"},"Update the dependencies array to be: [dispatch, featuredPlaylists.length, newReleases.length]",{"range":"317","text":"318"},{"range":"319","text":"306"},{"range":"320","text":"308"},{"range":"321","text":"306"},{"range":"322","text":"306"},[814,816],"[dispatch]",[2220,2222],"[playTrack]",[673,675],[624,626],[2859,2861],[1158,1162],"[dispatch, id]",[693,697],[806,808],[694,698],[884,886],"[dispatch, featuredPlaylists.length, newReleases.length]",[710,712],[2175,2177],[569,571],[620,622]]