[{"C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\index.tsx":"1","C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\reportWebVitals.ts":"2","C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\store\\store.ts":"3","C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\App.tsx":"4","C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\store\\app-reducer.ts":"5","C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\store\\home-reducer.ts":"6","C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\store\\myLibrary-reducer.ts":"7","C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\store\\player-reducer.ts":"8","C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\store\\album-reducer.ts":"9","C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\store\\playlist-reducer.ts":"10","C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\pages\\login\\Login.tsx":"11","C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\pages\\main\\Main.tsx":"12","C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\api\\spotify-web-api.ts":"13","C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\api\\api.ts":"14","C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\pages\\main\\home\\Home.tsx":"15","C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\pages\\main\\playlist\\Playlist.tsx":"16","C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\pages\\main\\album\\Album.tsx":"17","C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\pages\\main\\yourLibrary\\recentlyPlayed\\RecentlyPlayed.tsx":"18","C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\pages\\main\\yourLibrary\\LikedTracks\\LikedTracks.tsx":"19","C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\components\\layout\\Layout.tsx":"20","C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\helpers\\helpers.ts":"21","C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\components\\layout\\Header.tsx":"22","C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\components\\layout\\Nav.tsx":"23","C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\components\\layout\\player\\Player.tsx":"24","C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\components\\common\\playlistCard\\PlaylistCard.tsx":"25","C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\components\\common\\tracklist\\Tracklist.tsx":"26","C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\components\\layout\\appNav\\AppNav.tsx":"27","C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\components\\layout\\myLibraryNav\\MyLibraryNav.tsx":"28","C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\components\\layout\\player\\currentTrack\\CurrentTrack.tsx":"29","C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\store\\artist-reducer.ts":"30","C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\pages\\main\\artist\\Artist.tsx":"31","C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\components\\common\\artistsLinks\\ArtistsLinks.tsx":"32","C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\components\\artist\\PopularTracks.tsx":"33","C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\components\\common\\cards\\Cards.tsx":"34","C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\components\\common\\card\\Card.tsx":"35","C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\components\\common\\albumCard\\AlbumCard.tsx":"36","C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\components\\common\\card\\CardSkeleton.tsx":"37","C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\pages\\main\\artist\\ArtistContainer.tsx":"38","C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\pages\\main\\album\\AlbumContainer.tsx":"39","C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\pages\\main\\playlist\\PlaylistContainer.tsx":"40","C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\pages\\main\\home\\HomeContainer.tsx":"41","C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\components\\common\\Table\\Table.tsx":"42"},{"size":912,"mtime":1610633256770,"results":"43","hashOfConfig":"44"},{"size":425,"mtime":1607317929848,"results":"45","hashOfConfig":"44"},{"size":846,"mtime":1610615971852,"results":"46","hashOfConfig":"44"},{"size":1107,"mtime":1610529283982,"results":"47","hashOfConfig":"44"},{"size":768,"mtime":1610608960159,"results":"48","hashOfConfig":"44"},{"size":1991,"mtime":1611077859292,"results":"49","hashOfConfig":"44"},{"size":1233,"mtime":1610611781447,"results":"50","hashOfConfig":"44"},{"size":783,"mtime":1610611781454,"results":"51","hashOfConfig":"44"},{"size":705,"mtime":1610611966224,"results":"52","hashOfConfig":"44"},{"size":752,"mtime":1610611781449,"results":"53","hashOfConfig":"44"},{"size":793,"mtime":1610115202790,"results":"54","hashOfConfig":"44"},{"size":1337,"mtime":1611485346319,"results":"55","hashOfConfig":"44"},{"size":454,"mtime":1610615330765,"results":"56","hashOfConfig":"44"},{"size":1643,"mtime":1610271477229,"results":"57","hashOfConfig":"44"},{"size":1059,"mtime":1611484691453,"results":"58","hashOfConfig":"44"},{"size":489,"mtime":1611484386175,"results":"59","hashOfConfig":"44"},{"size":2308,"mtime":1611506262671,"results":"60","hashOfConfig":"44"},{"size":865,"mtime":1610541119727,"results":"61","hashOfConfig":"44"},{"size":800,"mtime":1610541033798,"results":"62","hashOfConfig":"44"},{"size":488,"mtime":1610360476342,"results":"63","hashOfConfig":"44"},{"size":233,"mtime":1610527828587,"results":"64","hashOfConfig":"44"},{"size":777,"mtime":1610207924939,"results":"65","hashOfConfig":"44"},{"size":418,"mtime":1610201734089,"results":"66","hashOfConfig":"44"},{"size":4735,"mtime":1611061055401,"results":"67","hashOfConfig":"44"},{"size":495,"mtime":1611066034093,"results":"68","hashOfConfig":"44"},{"size":2990,"mtime":1611506099022,"results":"69","hashOfConfig":"44"},{"size":1129,"mtime":1610257856100,"results":"70","hashOfConfig":"44"},{"size":987,"mtime":1610207018817,"results":"71","hashOfConfig":"44"},{"size":930,"mtime":1610622933359,"results":"72","hashOfConfig":"44"},{"size":1331,"mtime":1611051995995,"results":"73","hashOfConfig":"44"},{"size":2436,"mtime":1611481115892,"results":"74","hashOfConfig":"44"},{"size":632,"mtime":1610622933351,"results":"75","hashOfConfig":"44"},{"size":2747,"mtime":1611507608214,"results":"76","hashOfConfig":"44"},{"size":933,"mtime":1611066833484,"results":"77","hashOfConfig":"44"},{"size":1056,"mtime":1611482386033,"results":"78","hashOfConfig":"44"},{"size":536,"mtime":1611062973787,"results":"79","hashOfConfig":"44"},{"size":438,"mtime":1611066696528,"results":"80","hashOfConfig":"44"},{"size":1609,"mtime":1611481360990,"results":"81","hashOfConfig":"44"},{"size":1101,"mtime":1611482824250,"results":"82","hashOfConfig":"44"},{"size":984,"mtime":1611484386166,"results":"83","hashOfConfig":"44"},{"size":1100,"mtime":1611484691461,"results":"84","hashOfConfig":"44"},{"size":1079,"mtime":1611507608226,"results":"85","hashOfConfig":"44"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},"1vm27yo",{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"88"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"88"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"88"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"124","messages":"125","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"88"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"88"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152","usedDeprecatedRules":"88"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"159","usedDeprecatedRules":"88"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"170","usedDeprecatedRules":"88"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"173","usedDeprecatedRules":"88"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"176","usedDeprecatedRules":"88"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"179","usedDeprecatedRules":"88"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\index.tsx",[],["182","183"],"C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\reportWebVitals.ts",[],"C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\store\\store.ts",[],"C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\App.tsx",[],"C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\store\\app-reducer.ts",[],"C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\store\\home-reducer.ts",[],"C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\store\\myLibrary-reducer.ts",[],"C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\store\\player-reducer.ts",[],"C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\store\\album-reducer.ts",["184"],"import {createAsyncThunk, createSlice, PayloadAction} from \"@reduxjs/toolkit\";\r\nimport {spotifyWebApi} from \"../api/spotify-web-api\";\r\n\r\nconst initialState = {\r\n    album: null as SpotifyApi.SingleAlbumResponse | null,\r\n}\r\n\r\nexport const getAlbum = createAsyncThunk\r\n(\"getAlbum\", async ({id}: {id: string}, thunkAPI) => {\r\n    let result = await spotifyWebApi.getAlbum(id)\r\n    return result.body\r\n})\r\n\r\nexport const albumSlice = createSlice({\r\n    name: \"album\",\r\n    initialState: initialState,\r\n    reducers: {},\r\n    extraReducers: builder => (\r\n        builder\r\n            .addCase(getAlbum.fulfilled, (state, action) => {\r\n                state.album = action.payload\r\n            })\r\n    )\r\n})\r\n\r\n","C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\store\\playlist-reducer.ts",[],"C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\pages\\login\\Login.tsx",[],"C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\pages\\main\\Main.tsx",["185","186"],"import React, {useEffect} from 'react';\r\nimport {useDispatch} from \"react-redux\";\r\nimport { getMyInfo } from '../../store/home-reducer';\r\nimport Layout from \"../../components/layout/Layout\";\r\nimport {Route, Switch } from 'react-router-dom';\r\nimport RecentlyPlayed from \"./yourLibrary/recentlyPlayed/RecentlyPlayed\";\r\nimport LikedTracks from \"./yourLibrary/LikedTracks/LikedTracks\";\r\nimport ArtistContainer from \"./artist/ArtistContainer\";\r\nimport AlbumContainer from \"./album/AlbumContainer\";\r\nimport PlaylistContainer from \"./playlist/PlaylistContainer\";\r\nimport HomeContainer from \"./home/HomeContainer\";\r\n\r\nconst Main:React.FC = ({}) => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n\r\n    useEffect(() => {\r\n        dispatch(getMyInfo())\r\n    },[])\r\n\r\n\r\n\r\n    return (\r\n        <Layout>\r\n            <Switch>\r\n                <Route path={\"/\"} exact component={HomeContainer}/>\r\n                <Route path={\"/album/:id\"} component={AlbumContainer}/>\r\n                <Route path={\"/playlist/:id\"} component={PlaylistContainer}/>\r\n                <Route path={\"/artist/:id\"} component={ArtistContainer}/>\r\n                <Route path={\"/recently-played\"} component={RecentlyPlayed} />\r\n                <Route path={\"/liked-songs\"} component={LikedTracks} />\r\n            </Switch>\r\n        </Layout>\r\n    );\r\n};\r\n\r\nexport default Main;\r\n","C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\api\\spotify-web-api.ts",[],"C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\api\\api.ts",[],"C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\pages\\main\\home\\Home.tsx",[],"C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\pages\\main\\playlist\\Playlist.tsx",["187"],"import React, {useEffect} from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppRootStateType} from \"../../../store/store\";\r\nimport {getPlaylist} from \"../../../store/playlist-reducer\";\r\nimport Tracklist from \"../../../components/common/tracklist/Tracklist\";\r\n\r\nconst Playlist = () => {\r\n\r\n    let {id} = useParams<{id: string}>()\r\n\r\n    const dispatch = useDispatch()\r\n    const playlist = useSelector<AppRootStateType, SpotifyApi.SinglePlaylistResponse | null>(state => state.playlist.playlist)\r\n\r\n    console.log(\"playlist page\", playlist)\r\n\r\n    useEffect(() => {\r\n        dispatch(getPlaylist({id}))\r\n    }, [id])\r\n\r\n    return (\r\n        <div>\r\n\r\n            <div>\r\n                {playlist?.name}\r\n            </div>\r\n            {playlist && <Tracklist tracks={playlist?.tracks.items as SpotifyApi.SavedTrackObject[]}/>}\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Playlist;\r\n","C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\pages\\main\\album\\Album.tsx",["188"],"C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\pages\\main\\yourLibrary\\recentlyPlayed\\RecentlyPlayed.tsx",["189"],"import React, {useEffect} from 'react';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppRootStateType} from \"../../../../store/store\";\r\nimport Tracklist from \"../../../../components/common/tracklist/Tracklist\";\r\nimport { getMyRecentlyPlayedTracks } from '../../../../store/myLibrary-reducer';\r\nimport classes from \"./RecentlyPlayed.module.scss\";\r\n\r\n\r\nconst RecentlyPlayed = () => {\r\n\r\n    const dispatch = useDispatch()\r\n    const myRecentlyPlayedTracks = useSelector<AppRootStateType, Array<SpotifyApi.PlayHistoryObject>>(state => state.myLibrary.myRecentlyPlayedTracks)\r\n\r\n\r\n    useEffect(() => {\r\n        dispatch(getMyRecentlyPlayedTracks())\r\n    }, [])\r\n\r\n    return (\r\n        <div className={classes.recentlyPlayed}>\r\n            <Tracklist tracks={myRecentlyPlayedTracks} />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default RecentlyPlayed;\r\n","C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\pages\\main\\yourLibrary\\LikedTracks\\LikedTracks.tsx",["190"],"import React, {useEffect} from 'react';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppRootStateType} from \"../../../../store/store\";\r\nimport Tracklist from \"../../../../components/common/tracklist/Tracklist\";\r\nimport {getMySavedTracks} from '../../../../store/myLibrary-reducer';\r\nimport classes from './LikedTracks.module.scss';\r\n\r\nconst LikedTracks = () => {\r\n\r\n    const dispatch = useDispatch()\r\n    const mySavedTracks = useSelector<AppRootStateType, Array<SpotifyApi.SavedTrackObject>>(state => state.myLibrary.mySavedTracks)\r\n\r\n    useEffect(() => {\r\n        dispatch(getMySavedTracks())\r\n    }, [])\r\n\r\n    return (\r\n        <div className={classes.likedTracks}>\r\n            <Tracklist tracks={mySavedTracks}/>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default LikedTracks;\r\n","C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\components\\layout\\Layout.tsx",[],"C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\helpers\\helpers.ts",[],"C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\components\\layout\\Header.tsx",[],"C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\components\\layout\\Nav.tsx",[],"C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\components\\layout\\player\\Player.tsx",[],"C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\components\\common\\playlistCard\\PlaylistCard.tsx",[],"C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\components\\common\\tracklist\\Tracklist.tsx",["191"],"C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\components\\layout\\appNav\\AppNav.tsx",[],"C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\components\\layout\\myLibraryNav\\MyLibraryNav.tsx",[],"C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\components\\layout\\player\\currentTrack\\CurrentTrack.tsx",[],"C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\store\\artist-reducer.ts",["192"],"import {createAsyncThunk, createSlice, PayloadAction} from \"@reduxjs/toolkit\";\r\nimport {spotifyWebApi} from \"../api/spotify-web-api\";\r\n\r\nconst initialState = {\r\n    artist: null as SpotifyApi.SingleArtistResponse | null,\r\n    popularTracks: [] as SpotifyApi.TrackObjectFull[],\r\n    albums: [] as  SpotifyApi.AlbumObjectSimplified[],\r\n    relatedArtists: [] as  SpotifyApi.ArtistObjectFull[]\r\n}\r\n\r\nexport const getArtist = createAsyncThunk\r\n(\"getArtist\", async ({id}: {id: string}, thunkAPI) => {\r\n    let [artist, popular, albums, relatedArtists] = await Promise\r\n        .all([\r\n            spotifyWebApi.getArtist(id),\r\n            spotifyWebApi.getArtistTopTracks(id, \"RU\"),\r\n            spotifyWebApi.getArtistAlbums(id),\r\n            spotifyWebApi.getArtistRelatedArtists(id)\r\n        ])\r\n    console.log(artist, popular)\r\n    return {\r\n        artist: artist.body,\r\n        popularTracks: popular.body.tracks,\r\n        albums: albums.body.items,\r\n        relatedArtists: relatedArtists.body.artists\r\n    }\r\n})\r\n\r\nexport const artistSlice = createSlice({\r\n    name: \"artist\",\r\n    initialState: initialState,\r\n    reducers: {},\r\n    extraReducers: builder => (\r\n        builder\r\n            .addCase(getArtist.fulfilled, (state, action) => {\r\n                Object.assign(state, action.payload)\r\n            })\r\n    )\r\n})\r\n\r\n","C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\pages\\main\\artist\\Artist.tsx",[],"C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\components\\common\\artistsLinks\\ArtistsLinks.tsx",[],"C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\components\\artist\\PopularTracks.tsx",["193","194"],"import React, {useCallback, useMemo, useState} from 'react';\r\nimport Table, {ITableModel} from \"../common/Table/Table\";\r\nimport {convertToMMSS} from \"../../helpers/helpers\";\r\nimport {getTrack} from \"../../store/player-reducer\";\r\nimport {useDispatch} from \"react-redux\";\r\n\r\ntype PropsType = {\r\n    tracks: SpotifyApi.TrackObjectFull[]\r\n}\r\n\r\n\r\nconst PopularTracks: React.FC<PropsType> = ({tracks}) => {\r\n\r\n    const [toggle, setToggle] = useState(false)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const playTrack = useCallback((trackId: string) => {\r\n        dispatch(getTrack({trackId}))\r\n    }, [])\r\n\r\n    const testModel: ITableModel[] = useMemo(() => ([\r\n        {\r\n            title: (i: number) => (\r\n                <th style={{width: \"10%\", paddingLeft: \"20px\"}} key={i}>\r\n                    <span>preview</span>\r\n                </th>),\r\n            render: (d: SpotifyApi.TrackObjectFull, i: number) => (\r\n                <td style={{width: \"10%\", paddingLeft: \"20px\"}} key={i}>\r\n                    <button onClick={() => playTrack(d.id)}>Play</button>\r\n                </td>)\r\n        },\r\n        {\r\n            title: (i: number) => (<th key={i}></th>),\r\n            render: (d: SpotifyApi.TrackObjectFull, i: number, dataIndex: number) => (\r\n                <td style={{width: \"5%\"}} key={i}>\r\n                    <div style={{whiteSpace: \"pre-wrap\"}}>{dataIndex+1}</div>\r\n                </td>)\r\n        },\r\n        {\r\n            title: (i: number) => (\r\n                <th style={{width: \"60%\", paddingLeft: \"20px\"}} key={i}>\r\n                    <span>Name</span>\r\n                </th>),\r\n            render: (d: SpotifyApi.TrackObjectFull, i: number) => (\r\n                <td style={{width: \"60%\", paddingLeft: \"20px\"}} key={i}>\r\n                    <div style={{whiteSpace: \"pre-wrap\"}}>{d.name}</div>\r\n                </td>)\r\n        },\r\n        {\r\n            title: (i: number) => (\r\n                <th style={{width: \"10%\", paddingRight: \"20px\"}} key={i}>\r\n                    <span>Duration</span>\r\n                </th>),\r\n            render: (d: SpotifyApi.TrackObjectFull, i: number) => (\r\n                <td style={{width: \"30%\", paddingRight: \"20px\"}} key={i}>\r\n                    <div style={{whiteSpace: \"pre-wrap\"}}>{convertToMMSS(d.duration_ms / 1000)}</div>\r\n                </td>)\r\n        },\r\n\r\n    ]), [])\r\n\r\n    return (\r\n        <div>\r\n            <h3>Popular</h3>\r\n            <Table model={testModel} data={toggle ? tracks : tracks?.slice(0, 5)} disabled={false} />\r\n            <button onClick={() => setToggle(!toggle)}>{toggle ? `Show 5 less` : `Show 5 more`}</button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default PopularTracks;\r\n","C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\components\\common\\cards\\Cards.tsx",[],"C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\components\\common\\card\\Card.tsx",[],"C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\components\\common\\albumCard\\AlbumCard.tsx",[],"C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\components\\common\\card\\CardSkeleton.tsx",[],"C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\pages\\main\\artist\\ArtistContainer.tsx",["195"],"import React, {useEffect} from 'react';\r\nimport Artist from \"./Artist\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {useParams} from \"react-router-dom\";\r\nimport {AppRootStateType} from \"../../../store/store\";\r\nimport {getArtist} from \"../../../store/artist-reducer\";\r\n\r\nconst ArtistContainer = () => {\r\n\r\n    const dispatch = useDispatch()\r\n    let {id} = useParams<{ id: string }>()\r\n\r\n    const artist = useSelector<AppRootStateType, SpotifyApi.SingleArtistResponse | null>(state => state.artist.artist)\r\n    const popularTracks = useSelector<AppRootStateType, SpotifyApi.TrackObjectFull[]>(state => state.artist.popularTracks)\r\n    const albums = useSelector<AppRootStateType, SpotifyApi.AlbumObjectSimplified[]>(state => state.artist.albums)\r\n    const relatedArtists = useSelector<AppRootStateType, SpotifyApi.ArtistObjectFull[]>(state => state.artist.relatedArtists)\r\n\r\n    console.log(\"artist\", artist)\r\n    console.log(\"artist popular tracks \", popularTracks)\r\n    console.log(\"artist albums \", albums)\r\n    console.log(\"artist related artists \", relatedArtists)\r\n\r\n    useEffect(() => {\r\n        dispatch(getArtist({id}))\r\n    }, [id])\r\n\r\n\r\n    return (\r\n        <>\r\n            {\r\n                (id !== artist?.id)\r\n                    ? <div style={{color: \"white\"}}>Loading</div>\r\n                    : <Artist artist={artist}\r\n                              popularTracks={popularTracks}\r\n                              albums={albums}\r\n                              relatedArtists={relatedArtists}/>\r\n            }\r\n        </>\r\n    );\r\n};\r\n\r\nexport default ArtistContainer;\r\n","C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\pages\\main\\album\\AlbumContainer.tsx",["196","197"],"import React, {useCallback, useEffect} from 'react';\r\nimport {useParams} from \"react-router-dom\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppRootStateType} from \"../../../store/store\";\r\nimport {getAlbum} from \"../../../store/album-reducer\";\r\nimport {getTrack} from \"../../../store/player-reducer\";\r\nimport Album from \"./Album\";\r\n\r\nconst AlbumContainer = () => {\r\n\r\n    let {id} = useParams<{ id: string }>()\r\n\r\n    const dispatch = useDispatch()\r\n    const album = useSelector<AppRootStateType, SpotifyApi.SingleAlbumResponse | null>(state => state.album.album)\r\n\r\n    console.log(\"album page\", album)\r\n\r\n    useEffect(() => {\r\n        dispatch(getAlbum({id}))\r\n    }, [id])\r\n\r\n    const playTrack = useCallback((trackId: string) => {\r\n        dispatch(getTrack({trackId}))\r\n    }, [])\r\n\r\n\r\n    return (\r\n        <>\r\n            {\r\n                (id === album?.id)\r\n                    ? <Album album={album} playTrack={playTrack}/>\r\n                    : <div style={{color: \"white\"}}>Loading</div>\r\n            }\r\n        </>\r\n    );\r\n};\r\n\r\nexport default AlbumContainer;\r\n","C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\pages\\main\\playlist\\PlaylistContainer.tsx",["198","199"],"import React, {useEffect} from 'react';\r\nimport Album from \"../album/Album\";\r\nimport Playlist from \"./Playlist\";\r\nimport {useParams} from \"react-router-dom\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppRootStateType} from \"../../../store/store\";\r\nimport {getPlaylist} from \"../../../store/playlist-reducer\";\r\n\r\nconst PlaylistContainer = () => {\r\n\r\n    let {id} = useParams<{id: string}>()\r\n\r\n    const dispatch = useDispatch()\r\n    const playlist = useSelector<AppRootStateType, SpotifyApi.SinglePlaylistResponse | null>(state => state.playlist.playlist)\r\n\r\n    console.log(\"playlist page\", playlist)\r\n\r\n    useEffect(() => {\r\n        dispatch(getPlaylist({id}))\r\n    }, [id])\r\n\r\n\r\n    return (\r\n        <>\r\n            {\r\n                (id === playlist?.id)\r\n                    ? <Playlist playlist={playlist}/>\r\n                    : <div style={{color: \"white\"}}>Loading</div>\r\n            }\r\n        </>\r\n    );\r\n};\r\n\r\nexport default PlaylistContainer;\r\n","C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\pages\\main\\home\\HomeContainer.tsx",["200"],"import React, {useEffect} from 'react';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppRootStateType} from \"../../../store/store\";\r\nimport {getFeaturedPlaylists, getNewReleases} from \"../../../store/home-reducer\";\r\nimport Home from \"./Home\";\r\n\r\nconst HomeContainer = () => {\r\n\r\n    const dispatch = useDispatch()\r\n    const featuredPlaylists = useSelector<AppRootStateType, SpotifyApi.PlaylistObjectSimplified[]>(state => state.home.featuredPlaylists)\r\n    const newReleases = useSelector<AppRootStateType, SpotifyApi.AlbumObjectSimplified[]>(state => state.home.newReleases)\r\n    const isLoading = useSelector<AppRootStateType, boolean>(state => state.home.isLoading)\r\n\r\n    useEffect(() => {\r\n        if (!featuredPlaylists.length || !newReleases.length) {\r\n            dispatch(getFeaturedPlaylists())\r\n            dispatch(getNewReleases())\r\n        }\r\n    }, [])\r\n\r\n\r\n\r\n    return (\r\n            <Home featuredPlaylists={featuredPlaylists}\r\n                  newReleases={newReleases}\r\n                  isLoading={isLoading} />\r\n    );\r\n};\r\n\r\nexport default HomeContainer;\r\n","C:\\Users\\Os\\Desktop\\projects\\my_projects\\spotify_clone\\src\\components\\common\\Table\\Table.tsx",[],{"ruleId":"201","replacedBy":"202"},{"ruleId":"203","replacedBy":"204"},{"ruleId":"205","severity":1,"message":"206","line":1,"column":40,"nodeType":"207","messageId":"208","endLine":1,"endColumn":53},{"ruleId":"209","severity":1,"message":"210","line":13,"column":24,"nodeType":"211","messageId":"212","endLine":13,"endColumn":26},{"ruleId":"213","severity":1,"message":"214","line":20,"column":7,"nodeType":"215","endLine":20,"endColumn":9,"suggestions":"216"},{"ruleId":"213","severity":1,"message":"214","line":19,"column":8,"nodeType":"215","endLine":19,"endColumn":12,"suggestions":"217"},{"ruleId":"213","severity":1,"message":"218","line":58,"column":9,"nodeType":"215","endLine":58,"endColumn":11,"suggestions":"219"},{"ruleId":"213","severity":1,"message":"214","line":17,"column":8,"nodeType":"215","endLine":17,"endColumn":10,"suggestions":"220"},{"ruleId":"213","severity":1,"message":"214","line":15,"column":8,"nodeType":"215","endLine":15,"endColumn":10,"suggestions":"221"},{"ruleId":"213","severity":1,"message":"222","line":74,"column":9,"nodeType":"215","endLine":74,"endColumn":11,"suggestions":"223"},{"ruleId":"205","severity":1,"message":"206","line":1,"column":40,"nodeType":"207","messageId":"208","endLine":1,"endColumn":53},{"ruleId":"213","severity":1,"message":"224","line":20,"column":8,"nodeType":"215","endLine":20,"endColumn":10,"suggestions":"225"},{"ruleId":"213","severity":1,"message":"222","line":61,"column":9,"nodeType":"215","endLine":61,"endColumn":11,"suggestions":"226"},{"ruleId":"213","severity":1,"message":"214","line":25,"column":8,"nodeType":"215","endLine":25,"endColumn":12,"suggestions":"227"},{"ruleId":"213","severity":1,"message":"214","line":20,"column":8,"nodeType":"215","endLine":20,"endColumn":12,"suggestions":"228"},{"ruleId":"213","severity":1,"message":"224","line":24,"column":8,"nodeType":"215","endLine":24,"endColumn":10,"suggestions":"229"},{"ruleId":"205","severity":1,"message":"230","line":2,"column":8,"nodeType":"207","messageId":"208","endLine":2,"endColumn":13},{"ruleId":"213","severity":1,"message":"214","line":20,"column":8,"nodeType":"215","endLine":20,"endColumn":12,"suggestions":"231"},{"ruleId":"213","severity":1,"message":"232","line":19,"column":8,"nodeType":"215","endLine":19,"endColumn":10,"suggestions":"233"},"no-native-reassign",["234"],"no-negated-in-lhs",["235"],"@typescript-eslint/no-unused-vars","'PayloadAction' is defined but never used.","Identifier","unusedVar","no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["236"],["237"],"React Hook useMemo has a missing dependency: 'playTrack'. Either include it or remove the dependency array. If 'playTrack' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["238"],["239"],["240"],"React Hook useMemo has a missing dependency: 'playTrack'. Either include it or remove the dependency array.",["241"],"React Hook useCallback has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["242"],["243"],["244"],["245"],["246"],"'Album' is defined but never used.",["247"],"React Hook useEffect has missing dependencies: 'dispatch', 'featuredPlaylists.length', and 'newReleases.length'. Either include them or remove the dependency array.",["248"],"no-global-assign","no-unsafe-negation",{"desc":"249","fix":"250"},{"desc":"251","fix":"252"},{"desc":"253","fix":"254"},{"desc":"249","fix":"255"},{"desc":"249","fix":"256"},{"desc":"253","fix":"257"},{"desc":"249","fix":"258"},{"desc":"253","fix":"259"},{"desc":"251","fix":"260"},{"desc":"251","fix":"261"},{"desc":"249","fix":"262"},{"desc":"251","fix":"263"},{"desc":"264","fix":"265"},"Update the dependencies array to be: [dispatch]",{"range":"266","text":"267"},"Update the dependencies array to be: [dispatch, id]",{"range":"268","text":"269"},"Update the dependencies array to be: [playTrack]",{"range":"270","text":"271"},{"range":"272","text":"267"},{"range":"273","text":"267"},{"range":"274","text":"271"},{"range":"275","text":"267"},{"range":"276","text":"271"},{"range":"277","text":"269"},{"range":"278","text":"269"},{"range":"279","text":"267"},{"range":"280","text":"269"},"Update the dependencies array to be: [dispatch, featuredPlaylists.length, newReleases.length]",{"range":"281","text":"282"},[745,747],"[dispatch]",[687,691],"[dispatch, id]",[2136,2138],"[playTrack]",[673,675],[624,626],[2859,2861],[597,599],[2347,2349],[1158,1162],[693,697],[806,808],[694,698],[884,886],"[dispatch, featuredPlaylists.length, newReleases.length]"]